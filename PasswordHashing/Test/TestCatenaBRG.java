package cologne.eck.dr.op.crypto.password_hashing.test;

/**
 * Test Vector from Paper v3.3 
 */


import cologne.eck.dr.op.crypto.password_hashing.Catena;
import cologne.eck.dr.op.crypto.password_hashing.CatenaBRG;


public class TestCatenaBRG {
	
	// Test Vectors from paper v3.3 

	// Dragonfly FAST:
	static final int [] Lambda = {2,2,2,2,2,2,2,2};
	static final int [] Garlic = {1, 10, 10, 10, 10, 10, 10, 10};
	static final byte [][] AssociatedData = {null, null, "data".getBytes(), null, 
		"dataDatadataDatadataDatadataDatadataD".getBytes(), "data".getBytes(), "data".getBytes(), "data".getBytes()}; 
	static final String[] Password = {"password", "password", "password", "passwordPASSWORDpassword", 
		"passwordPASSWORDpasswordp",
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpassword", 
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswor", 
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordP"
	};
	static final String[] Salt = {"salt", "salt", "salt", "saltSALTsaltSALTsaltSALTsaltSALTsalt", 
		"saltSALTsaltSALTsaltSALTsaltSALTsalts", "salt", "salt", "salt"
	};
	static final String Output[] =  {
		
		"a9be3f474ba2d222b42d1b49e2408f1d4cdf7501c81026ce05695cf550f0a5b93e6904cf8deda8a2f5be70fbea224fe4a49bf55785f29cd2dc13fe79202c8769",
		"c116d6032ec47c6df6fe788207907e0e307247c50d5715bbfaa3948b57277a56033895ca7ba1168fb4786ed470db203bf5e1095cbc434cad58f94d3984e60c3c",
		"b80ea6cfdb841ad51f1eeab5effc723898f22dc1360fe543340c66cf97b9e97cef31df03a1d6c9d3758f81d5f773b62bb95a8bfeae592c5cd8edb01ed4ed26c8",
		"ea9df62ef6e50b1e8f3c76acff12c8d70bc6eab52c8ce4f0a00896841eaa7d8c5bf632d265187d5a31fdc0aab786c3c6c16ce7eff24aff26541a380369dedbac",
		"91f379815fcc47daa84f41696bb8790d05cca96d28f35e2ec3a9451befd54ae6040c167e6abace9963c58f63946108aa7ba9dee61dc73b0970c4cafcd23b40cf",
		"6f156e4b0bc5aecce6b9e8b2ad8de64d094bdfdf629ccef6d894fba14b8c63bf39873097b05ff6f487b310e010ce610d161005a250821f4f62e7a3dd144d6582",
		"8723c79704b9d9cc977b6362b74be9dc2ec6edfdeb13bcbda043c95c5a62828aff3756854d1f114a00a77a4a6f8007ee8ecfd5f1053172fcf411c239e9352268",
		"5d29a9432faa33783a5377c18693afeef1458c9284e6a63e6e6b16925e7d648731a535be6ff5b038e87e41e96c79a8d3f13faf842c2d468e5dc4594a7edbae18"
	};
	
	// Dragonfly-Full:
	static final int [] LambdaFull = {2,2,2,2,2,2,2,2};
	static final int [] GarlicFull = {1, 10, 10, 10, 10, 10, 10, 10};
	static final byte [][] AssociatedDataFull = {null, null, "data".getBytes(), null,  
		"dataDatadataDatadataDatadataDatadataD".getBytes(), "data".getBytes(), "data".getBytes(), "data".getBytes()}; 
	static final String[] PasswordFull = {"password", "password", "password", "passwordPASSWORDpassword", 
		"passwordPASSWORDpasswordp",
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpassword", 
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswor", 
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordP"
	}; 
	static final String[] SaltFull = {"salt", "salt", "salt", "saltSALTsaltSALTsaltSALTsaltSALTsalt", 
		"saltSALTsaltSALTsaltSALTsaltSALTsalts", "salt", "salt", "salt"
	};
	static final String OutputFull[] =  {
		"7daee388a3b2252f40b60a447d2972659e33278debb2f0ec3f91f004aee9946a68e44f7dfc39a453cbc350edd068e45bd77087b7a5da73690fa17c88961b1596",
		"bfb46f72995f97ec39a2914a7c9dd2040a72cf13ff0389a108ddf335607ed41928f2db8fad45c0f5d2dbd1f06c1786bab7ace9cf09b2a4700490cd33b5c6796c",
		"22404a845e9272b64c3eab2da61fdeb0b189078698190402fcad190fe14e46bd90ef49f64b5e4c712dc2cadb2ba3b2ff65ebe114bc6d7343135d985326d629b1",
		"da18706f128cea5f9cb04aec8930a12c46de1fb309666d2b8e8b9dc3814b0323809e4656382e6334337ef603935d34281ccda75097d0a790f2efa9e678da4790",
		"c4fe82433582242f9402b67f9ebc9e38921268a6c00d3a0c235c2a53f5992f89c317f816cb0f31f3c4c5f0c704e3ab826fc311e2e39be27894001fd5ed1d8e11",
		"13774391b7282d2e8ea903936260ffa6e6f1fc8a307425220c43cb98eb0df38580e562621c1ceafe3231e2ac2a654a54246c6e3e6721dbba44e10f5cacfd1ef2",
		"61abf3e045d36cefd54c73ee00f0ffb3f8d77a903433c95ee10392635c2e5568591fb0ca971b48742fee7cae827f0393618cdc7730feb7669f14bf6f5037ac91",
		"5bc008135f1077be487c29df023758636b1b629699c6de70a9e4c22e0d2dd0b3abe467a4ca0f73e533654774d1994342e515b2d8016e4edae651adf833627d88"
		};

	static final String OutputKeyed[] =  {
	//lambda 2, Garlic 1, "password", "salt", null, UUID = -1L, Key = 00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF, FAST
	"9ed39c6f9728d8c8067f32919515e5d71903b6464401425122aaf0c901c4462c7245c7f24c1aff19a376fd42f749b02372166ab5f930c2530fb594dd2ad63b03",
	//lambda 2, Garlic 10, "password", "salt", "data, UUID = -1L, Key = 00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF, FAST
	"1d4f781dd33728688c71f52f70ba21b16338546fc154472e7761829789bf519a6c117ce4c397b2840aa0a6f999bb3a2433dcd62d71f77916f7d1279f6b51db55",
	//lambda 2, Garlic 1, "password", "salt", null, UUID = -1L, Key = 00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF, FULL
	"4ac340a07f382fc5f2e4239c0a7c18afcbefe4ca67a3947318525c38ffdd77ff24c88c403dcef3e89d0bdd54cd031b9c01fd1855d9182de8dc07162c9ce1a9fc",
	//lambda 2, Garlic 10, "password", "salt", "data", UUID = -1L, Key = 00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF, FULL
	"870194565621400bdf51b4b739598d394a437e286f42a66fbfc0fd57ff48fe5b13cfea11291f372652ededf7456b3ef0ef6dbcc763c326093c610fd2996ad42c"
	};
	
	// Computed by reference implementation v3.3 for key derivation function
	// "password", "salt", "data", lambda 2, garlic 10	Dragonfly-FULL
	static final String [] catenaKG = {
		// keylen 129
		"4644dd3e3a070c41b9fa71f0ce6b4c00760f2bf5a5d8e08a586742a7fbf4dc7d93c5a907eb737486cfb7c2b73524ef0cec0117de6809ffe86039206f79382fe1f4ea9fed19fd21150de604de1901b5410064727ffe35d7dfc748cacdc1f2c6175b0f83bb3706d3b77a4a33117fae7eb2a9d7e5854abefbd11d067f208e5a8dd864",
		// keylen 128
		"ee797beebee488b8c94eca2d2c2118d1ca914a7dd6079e6020c4a971b347effc99f66e56c67b350953c30907d36f10cb91f3a3771de4af659817d3bd27425245ee348106d038c86c56dbfb688d7c3ee106fc77c47f44e3c114339018f03d92b849d78721d46ae4b12509ec29b5144331ea34afef5c7473d57285a51ddb3aa0a0",
		// keylen 127
		"bd596122630fde6f6803d1a9071737c22161dc9329dce1d6c2327076292aa0fa634b07862125a52a307d94576a58126f2854d388c0db605f1451773ba203fd492134bdd2d388857e77c0ba955615c9973963182b2790db0c93a63e068cb0fadef91e415b8857ccf752e59c925a8da0f7030d7863ad0fed09f70c8b3d7966ea"};



	// test vectors produced from reference implementation v3.3
	private final static String[] phcTestVectors = {	
		"a4211328be978a2cca75abdd8145b32997b699f34203b855c78e68b95bb1b804",
		"1e4d9d014bf7a6cecd932ce70d069cafc4230e1b021a96272a6ca1a99ea0ec74",
		"18c10a630928b7b80b622acd52f7634dbf2e28db0b43258abfab2348e85cddeb",
		"b078a50a7574db029476655b2a695e398c191efb5cf0e26d3788b72054045806",
		"dbd9097c721132ee6f0f0bfe0235dd68c040efbe28c30595863d287f698c7990",
		"59187de3011fc597843511a5bbde0e1171d7d3adecc1fe095e0d2b49ca9ad2dd",
		"118ca9954522e506ee0df70000466ff38c878f2cef38efd73a1bc3ccae09c661",
		"f4ad3a57704cdaa0cbd093b4f652a01a68887bc58b36fc96a4f8ccfa43197f3a",
		"56d7926841282e5c66d25dec4bc03aa2d9abfbae3498da4a564e0b6e55973ad6",
		"c782e451f63ef967c3bec4c9c575a0973e458d603b3e2efbd9a85276687d92db",
		"3b043b5c4ef153d8cd3ac4094073a022718cfe37c1e47ad21a84371efbade3aa",
		"28ef27b70c4c07441072aad92295e46748f5a34882c88ff55037ea4d1d13aa08",
		"e81696522544436a6a05abbb01e5633949e74514f590fc4390594cdc6c8a5fbc",
		"c66cac23e92160756f8204a6ec5ec2188c0d8d8a68196bfa8cdfff69d366b7ee",
		"da49efde43a0d453fdf5515792324ed0aca2e71e6d54fb77a0944f11b33c78db",
		"65e450da46bf6c8cd9967c9f69afa45781bd362ef8c70545e23b5e43eb3b2624",
		"b9871139c680927fe9d0bc1c08496d24dfe4caacbe60b6847047c2ebebb246ee",
		"61d4dca74a14d22a6977e958b5aa56a8570504f55e52cfaf651e43d7a2bd74df",
		"5a67b2233b28e9581a6d62fa494bedd5043e8bfd6f2a38bbb4a18b0af6c11a3b",
		"bd56daa18b59e0da01ecd36490da56b900a42314c91e399b68ac739921ff5d5d",
		"1b422d63b36884f50e979a7ec19d0e9aecde090ab6f6cd94c885e97412b13ba5",
		"c8ee74a62cf3368a32113033e1d10014b1e65778a25d3109fd0bc18fd321630d",
		"381186ab4b2632726696bb5e0a8fc99738b8a813f67b98ddb26cf14b93e0e1ba",
		"241b2abfa2dc9f9efd06109cbd3196004f638917d40d47b884945fb5506b6d4a",
		"58fa54d89ef4b39a404e1b54c1e824061baf2571b7a9041f70a7273967f51835",
		"c67337a11823588507440c4453bedd07885b0d9af9a95f841f046f9aec67b5fe",
		"db043e149f6ffd8381778d687673968d02a41a57cebc46bb7a4ac6c89e09db86",
		"b0b4920746737f9882422621ff4c2ef61c93bcaba4cf4970da52ced497aa3448",
		"ced3a4bdbb822df5b2bbe76141c0e918f9febed6382b455eb712fb0d70e981db",
		"489b18a07040932ba0af3ad81d5990eaf308fa56022853581dd8a2a27f717f9c",
		"3f7211a51d139b1042c36a8fdcd41041149ab291c241f1eb314c0720522125e0",
		"79712a65a3d4fbfb0526e01c595e01e29d23170134b2064094b18c9e75ec5478",
		"a1066bc03619af3cf1546a3c78b14abea1e5ab494d9bc86fbfaed17e5f029acf",
		"fd094d6e81bcdc2ca7fc23e707cad4dc733ceeebb8e2f426480bf4e572927476",
		"0b0456da1ec65dc8c9d6208740a7b75a9031a96c1e8f76d6b52449754fe76dd5",
		"c6c8d967e1f0292d26888535e435e15c22c9f904fd8e0caf216999b2a640666b",
		"0780e78a9df62618041e145b791e1d5bcbf298e08f05bbdc61762b196f54fb04",
		"5500105f48ec0cee8b1c3b9d13e5f6ede60c55662945369c28c848dc78d6a77d",
		"dbada728690b712b3e7044c2191c8b611ba808f43830619eef576e0f96ef265a",
		"181dd92c63bcac23516bdce30cf8a5c9395f0b9f86fe89981a0c3659a5dc6ec6",
		"048306cbde039d0df70c9b856a734a69070181caa352cfbe7a425fe854b6a738",
		"b1a39185326a3728d35243f6587298ee930dbb04e0285df9b8804d15aa29d475",
		"5e013970c5656fc2297fac0423038ea9dc30d9130808cc3d9c97c7489d909c97",
		"3410f8081e94375c72b787758248269691883ca9a71fcfbb4c68f6067bffa936",
		"973e828d49cf7d46fa279bd40ee0d80968ba1542dc32ee520d2e8aa83349e15c",
		"8e7b1a15ecae79ce38e51b8409203721a6a214225f5ba46c75890594b59ded99",
		"b2fbb82d5a1270e5965e83ec173c13f16a35e7767255c4ed10e8d18383c0235d",
		"683e69fcdcf9c07a6bb0e55e0cb62a8336d6adba2c49754fce7f53e17f415b11",
		"acb54429f4f52b42bb583a37a52431ee798f24dfa4182d830a67b709ca8b3b7d",
		"fe930cec566750ac29548924634c79aa1ef319332e5c311a15e19579e482ec6e",
		"5cc0815948b56bf0ac9f60c9bd465b5e8a777d57248a29fd65df8e203d93697f",
		"901e433ca24c1663f991c33dcc19dc9205ea52072ea24f04dd268eb7329e61ac",
		"24fe34de0dede20bed07230082898fd5dfe081a2f05881097104900057ee95b3",
		"70d7007952267b8410a32a741aa457335f52dc2d36ae5d047b5c4f545d236616",
		"f69cf21e09e9523d3f9ca0066d1e5a468bb03c511388feeb91f5e73c80020267",
		"18468b12cad351f1ed2dcb556e41c6c789b4c3e48f6daa36c47271ad21af2881",
		"4dc6c88f4bfa90be756d419ade6e285b91a8ecc7a934794a62d5f0d318735315",
		"7bd968384cc79bd67cded579960cd6c3c53e4b44cb51b3f8f6101d5e3dd869fc",
		"37160184fbc4568b11f0480c275c03d3f570ae2d1df20f27809b9fa72a4ee2a7",
		"af081bfce40249c445b6f1d141391626e35c046b101b72a227786ec53e8030a6",
		"4559202e22b11e649985d3bbc1bf741b4b274ba15c9a570e94522a13620b2b3f",
		"51171749259607daac4f7c0de3ce5fc6ac68e52728d66f8e24ce6fd50aba3690",
		"26dc4317f8e76eeaf390d77c9121b56e542e306b047b11dc1973cd31d57f35d8",
		"eafdd0521a4a9aa9cdc09737a829b9b6ae15788f7c6107554974ab0ebb07b096",
		"3540d5846f86506f1e8d3dc093a9ca95c3b92304d44584d26544e2fecb33251c",
		"746e8e897c69e600eb4a526bcdcf9674747df054a189610c4d9839265e76ceb1",
		"6c1a66891ef7ba537329379fefd53dc32d325893cbd1a4430c53b08c3b077856",
		"bf26f0368a3e3e0ed636d20b7662494f525fd979a0a20ad880d46978c73a5cf8",
		"d07746978efa93aa0ec3caebd51480bf4392255c29bdf526135998091f51b2a2",
		"7b34516a420611973ad489730c972dc8a2ef2d1b65cb9fc48a2d143fc4c6ed1e",
		"9971628ba437eb4b898366577070c354836a9c8d586fa37b484193fd931d186b",
		"7f553c3d41e19706099d8c531a736e680bcf779c6731136ffe513271386a3e5c",
		"ba0ca6c39b33916d618450a13fa8a0c2e3d8a7a6c05dd299754c386f9d2459cf",
		"74ad32bc997edf845cc0e032c6fa4cb496648bee321a481f07c5e5bed317e822",
		"f8747b7c8cfb9d690dbae9bb0804fe7a513c9e306da622933f92783d255cf46c",
		"4a7ed8669e5214ccbc722c62e3ade80a9f216b9f185534758729aca19ceef1e5",
		"8925d8e04ac9b0cb28292383b4650f7b599c37dac0eb52d91e2d159ca62f6bcd",
		"f9bcbf433de9a89908a25a7a19c71b76093d58bb3445ad2e8f76bb4be9ab758c",
		"edb1c3b39219c5b6b9e21ea5d31039816f075bb2a25130a55352eb07b4cb23b5",
		"5f0d03acadef5f89233c0d1f113ee40e57ff6c02674d3fce0d609f6cd3b762b0",
		"d30ed8e10f488bd18be84184971150de2bcee442134ebe0d03c021cec0378a08",
		"6651793da459f724f915ae639f64c6a5b8b78d70d26053373bb3be5d7f5cf0e1",
		"3f73598b5b8a5491a52c236b7ba25110860c6f7dc25b0387523ba320719bc151",
		"90ba46cbf57c89f16cf107deded3b6263e45c956afff67a5f5308f62d5cdc541",
		"f55da0596f5fd70e1645b25b21c4000d70f91b0bfefdd24c2685e3bb5674c284",
		"adcde1954d1aba74aa6930e23b063b58872ec72ed4b08d00eb616696ee8d4576",
		"f0ed05ea9f75eaf6721c714dde09cb8ead7dfecb89bcd29bd5c7d4a112bfbce9",
		"31c066cc7f5fc9baca74b44b08847a0f5658e0fcda86b1187ddd766f7be02d29",
		"4594b4284064e119dcd51e9e001a3b5f5b73486cec83f4588801f507da0f7d9c",
		"4ca60b368ad4c049131cc18c0a8a4504fffb22704085f2a69ebcfc666b1198eb",
		"b9dbc050e5152df4951268093aadee5d6892c44fa1ba447c523b48ed3080017d",
		"b24be5023afe7ee2c58197db92f888a3223c511496aed01a0eb3733cbde40c3c",
		"420a8a519dc87d72edf60554ce6c861c086770234da5d41ce3fdb96712aa5367",
		"f04286cd7b36274d4a02e8cccc08ac37950f42a29ad4ceb315472f11e984644f",
		"e4ad99edaf6fdbbe2b41f1acce4e24ddcd3a152b0d2729cbfdc1abbff2f455d8",
		"b6ac89d4272deba994a129d84c4726bfdaa27e44094cf1381588f8963aa6597d",
		"cfa6aebe54eb0ee4c124a767f58b229ca4ea651bc0b3844c37611b3f6da7eba3",
		"ca10a0ae24b6bb088ddbb0e0131e230ad158588eb711896f0bc850841045a787",
		"8cda23cb12e1452f3a0f6b0440f37708933b8d5889a79b0c8a7bf3eb97abdef7",
		"95435710ee1ceed79a7997524568a221723bbe69a9190f67c1c6ace644d4f58f",
		"7ebaeb64e9f9c73801ebddc55bc1a92689c6b935e2600290b11c143efa4fd032",
		"1da2e7309b76c380c88fea1d6b9fdaa8bb5c66c1964f060566808a3047346971",
		"9b8479d28fbe7ac1951503f0a70196812cc4cacf2773d24e94b4ed167b941b53",
		"03870915590fe0f7b3c7397fe00fbfbc7bc1877ef2d6cdb892120572ae5728d6",
		"0ac0d1cbf5b34609cd820608609ef4a1a64f8208e1e8dfb9b698d403ba8a803d",
		"3a0baad2d413dab746f6924b7b59328cd755292b63bfb3579a5e798a0fb8c09a",
		"76839d5ba8226e7ecefea02dce63f89e61fb62526974d7ac486aa6e5277fa55d",
		"cbfd50bc0561a50312a0c50135f7ec23032ff8476e27f38efb35d751c752456c",
		"c1726a76b448621dcd8173c32bef7627f9104564f2e479faafd97125d3143935",
		"103c04a0855884e4325b5b7e511e585782a828521c7ffd8c92f1efbb0995ad98",
		"6409bcc2c234b097f912e412acbf50753bf6dfdbc04ae62d21aa0f4c6dd5df13",
		"fd006e984e2f3705dab7e2f33eef1c015e849f47a77281a98f0769a06aa12ed1",
		"83dd1cdd2de6e8c8d7496f059abc41e14097518c56bc84cfa5a96fbdcea3cde6",
		"80adb179e3f6d7626b3aae0a21e2108c5468225050816c4ffc60e0ffa448c519",
		"a85289aa9003e019eab67a1eefa4922c32f8e588b3ffe4a799bdc928919e1f86",
		"eb0da0897c8bca9a1dd47adc5fcb735cb949cb902f43a3a65782aaa20f006fc8",
		"b53f28df88680635f6572bdf74d26b9afb2856e6d265681a6fc6224e48c1e1e2",
		"612dfc34a3116f2a797e1217810578a253edecac61d7257594d9e03fbc3ac725",
		"9550abf97f03a2a2096c6a1122ef0fd1ed7c1129ddbcf25d108e93f91df8e426",
		"19632b7d1ff2e2f62c47b73466c49e879e075a3ca575ea6eca4d2d680c7ad1cc",
		"5d96481198edd2e32e541ee881dd24086d93f9008a4ed34e938247ae72b1db58",
		"337eeb5bba0e4f64cd13584aa411437e016067f08e1428859afd5c2634685b3d",
		"1877536d4f99e3fb73ba7a6997722e896d0c3866152f4756cf22390bd5dd308d",
		"716871208b80719ed95f2a3e24abfb777ab8de3e674871692b63c55c6bca8013",
		"a60d7f98a1785865b4349347501fd2070fe3908a1e848e22fb1d59b2eb3386d7",
		"fac559d41501deb8662b12444d96da3b506cf0ac5f6ae8be49e7d34c9fdd0608",
		"411589a8e9b6012ddb17ae3d5ee0e04cf89b9649bc167d50ffcd0ca8e6d87d99",
		"20f74926f4986a5d8eca2ab3a5286bb3610df01949d14290299b184b0de33244",
		"3de7601e53d898a1987b66e9ba51acbddc90365bb1cbf2cd1ebbe15a67cdb686",
		"73e2c60590feb1a36e69053de8b4b16ccc11011ee5b5dd6e1d1321693e776db1",
		"f2dbce79003dab4478706748a9ef8bc6f013b0290108aa343f6bb442b64eddca",
		"4a5bc743fc92c5cff46621fc44db35eea54a79c1cde21993aed71517f0236f2b",
		"b0f79c3f14ddbea8bf41bb70771131f33adf00d546e0d97934898610bdf0b963",
		"028b8721b540587fc9b34cf29050eb15103fdd04fcad1ede84c89b6ae697de31",
		"6c51c75a03a4893932e3aa07315fd3ad97f48eaff2694c9d57f7220f71c9fcbc",
		"60c850cc22b6a9d3c1a5f7a2203d7d4a43f1fe30f15ad4f67f062b1d14b01d5e",
		"4c45aef4e77214a2dae2309060ce3a0cf88095548e00a3f1980994adc14ac8ce",
		"3779c62d3d52937b1b5e2c8da75c86f0e922ee00ba01ccf60a4a0988b83db286",
		"78d418e559ae86155ee85ee35278946de950ef8b9d6efcb7921eca09707fa473",
		"6e996d33be76da228f06e4e650daa0c6d9c7e2c4baa2561b9b9172afe67d1d36",
		"82ae64b43f5878dbe619704a52e859f18637215b7d0759aa1e23e1859e31abcd",
		"d2476c1a94692ce7a0aee747f59ed672747d83b8e63d024ae8dfd28aeb7ce993",
		"936fe568cdce469d30556a759e638897183f68e45964a68c3bb2094c05264e84",
		"3ed697fc9d027348f418a4a051641ec31054c31f76257d76d36884cb0d8a41dd",
		"708cfa54cc513d147248b00d94ff97d987599ca75f0da33b74bb1166971666f0",
		"51782bfa36fa19524bb362c3d0387d837049f64295ac4cb0127e3a8a11b5edee",
		"d8073a4c0413303d6f67799a8bcb51b1e73c001fe40ab757b5a391e5988ec8a0",
		"a22c8d3cde4c1db5808e2433b63f3a7ed1561f923f7d46ec520d9951484a951e",
		"fcbf21cdf8f48d18dcf46b4bb14da9c03bb8262675c2b682a24f72535f555bf1",
		"518683609eb41718c56705379d3febd674ae94fc1982ed585aaf7b95c421de0a",
		"ac3bf69a0a8902804ff9c676e4e3ea9183627a86f39fe2a2b0c85994d3c97916",
		"b8e75a7c7e196b655eda060a0b275875bb10241a0027a58b084f3faa19bc8191",
		"94dc2bccc8fa54d12fd6738cb04ac586657c33d8f075820252e7efec99f4b2b1",
		"755a2998687f1f4d8b113c851c3cbc231650a971245a548da03b8cc23da18642",
		"bd85a7bba7f7f5fbaa674251f0aa907be082d24a195f1311ae9e1e45ecf2bd08",
		"163dfc7ce4837080e8572a46fe581a6c52d6668b987163e9645831d65752d386",
		"dd021587a5b4ec04d1779bade5fcfcf51d2abae3d82b0395300228cfe82593b1",
		"f767b6e360772d07bf500772778a6d3cacf7e0056244f39d81b7991c3f86f68a",
		"b2a333b5b76abe8c5a20d71e5c8d274494d6a61885e8b6dfde1d6a07821a98be",
		"49b6cf7836ef3c0e36cfb9f0fa492b2e71a06d18e9e75a027f4e62adcd8274cc",
		"21df0f33e1dbb5cd63ed07b762b093beb52630cc83141e095e1150e966838736",
		"e6bde54ef382bc85587a2a1de2be8df150ca113e1aa196cc2e4582a2ef599e27",
		"7150fb2fdd21016d100df05ff935b3e6b5171465334f5a41d71cca3147f0f46a",
		"e9b4a8131e853b481cc6f45d844beff0b0c33a0a15d74bd6163563ccdcdb4b4a",
		"4aeb6e872c40ffa5e330977a2cdec3a6e94dc41f9aba1d5d17b7833a95981c52",
		"6fc4fa8dd7857226841a426d5d3892867efb4ac3cfedf84a7676ee4442917498",
		"e86c2edf3b99c34b8a530dcca04e72ab87274776cb09fc3f17b74fffe6f5f399",
		"188fb25808a76a3795839ca128d1e325343c1fdb0afe8dc865c7855606a433e1",
		"5bb5725fb34092e3b3da29567dc8f2b95c2e57459508667a912407c55dbcf32a",
		"64ad5d56c06e078483cb6bb007962e670d42f7ec6e534ffcb66667568536694c",
		"a5059f811099e1a5b5de77482baae6f25fc7ffad2088139b17d828b436cdcfc6",
		"892665984277b25b4a6058235009f2b24e1e02bc9b7986811590585f95242cc6",
		"cc71e017bef33e7b9aaed497b28b610535617edc396aea0db2219de66f6dffef",
		"878a9d3e5b6d5e8c5b5e187e6373680a487a8c92800cbce4935bb30b84f3395b",
		"58841d14eb45b2f6a72c417716f469ee4e418c939ae1d3a7487f3385119bedd6",
		"fe825701e886e6ebf9c98f6d7dc3752f7b4d3095fe4906b20435b60572f67a3d",
		"b3232b90bd4b8bc79758b749b01f0d7eca8e827f193d73d08be5c547acb356a7",
		"9b17654514692c54f45e940ce0cb217131d304e800ca6fca8a666be902317c7b",
		"f61e5c3236704771b958512faa3b9829c9635dc47a856c04616b30d317d250bb",
		"0582f82c158cca437d642271dc666df73f33cbd4f0861fa89272ebec716799f5",
		"38ee757aa83411b6fbe0adc0764bc0dcd8d79e713fc2101733c3bdc9d7f8a56c",
		"a9da154e556a9122c8edf7608b645d4ad330dd887f79cb647a4995562242811d",
		"d1e65ca66e97bc5c779d180b9681adcee98458a98e10eb8b36fc6b37fa72594a",
		"89044c98c84069cef86ffa80ae20e0a5977d3e6c0b05de730ce65e70d447d360",
		"342a1a0b3f028ee0326b5150ce4957a119036b9e47103a1a0ab1155fb8fb1d82",
		"78c2e796b12c62d6ec071bb6063336a6e130d692a6c219682d722313768a71b9",
		"c94de7aae7fcdb7e86578e4a7bacc547d1ca598c997986ceddee41f3bf76e15e",
		"d17b6517e51070a4b052b29257812a40db4f37dcd72c9121f10003a07f53f696",
		"2a63965a2b858aa98bc0eefd7e098021e76f00071ca2507dc64ba2870f8aabd7",
		"67aa890453b640b18bcbf1e6d287213a1abaa7c3d306e13fcecce69f0ee560ac",
		"731f8bfb3fcc6c047609fdb5f7d651b7c9f3f6281065def3b5cb459983a59a69",
		"d727fe6f9c557692230557a100d0c7e7d0a981440735aa26d8d952ee3d86d37b",
		"bc502c1ccc71c0f07bbda2098404e1ec116a6844259de9709a66f504238d81bc",
		"b4a4a3a61b41448c7cee8168de0762ebdfdcc697bfc396f6742f5ca8f15c8c56",
		"d555c5738fe15d03f0300d211e60613ec5087de00a507aa0fabf31ea4d475d46",
		"ac04081137b39a3dae5974e2af63bb53ac92daddeacddcf9fcf502c2583f2959",
		"061eda95c54a0aab38e1c6aced70e9637b5cd16fb5b829b3bc9e7443f9505fd6",
		"2898908a7ea8a8949be73ebe1c90513eb4f0d633c02970197ac30c57e803c0cb",
		"ae0a3f36d163d38cb5c2f228de01b1d96cd95a14e5c8400d4dfbd475798ec533",
		"d195b901c197e81d6172f5040788552c54c23582920b37228ae048a7f9d7d861",
		"6448d2f50732e38a656d26cf9d188d6b26677c791edcd426cd6cb3c388e09393",
		"269814ad7ba0c5c5d6c449c40ac4abfd715d892bf62f7ece960e3e29f4c29a5a",
		"3f80037ce790173cc439d2aefd119e68c7802470c074dfc45c83556b40a6b11b",
		"24edc2c7411fdd219131b917f187a11c7dbfca8cc01b1df4efe3659cb4170681",
		"22ddc8ed065433a0ad99d2980f9f7254a6c13187bb68ac634fda1580f793e631",
		"6ea4a3ee40288c69cdbb926cf336860c07af2a797e9c7355b21f7974b4e5a5b3",
		"3e2c8bc843a6f40a9f50f3932c481755329ba84612ff3ab7ebfa5a692bd9090d",
		"9647b96a49279d6975e03cc93818b972a333530249e61a44a54c12d62503dbeb",
		"1549e0384d1ac69f3807893307215bad6d2bc53043d04d1710c65e738fdafb08",
		"70d620cc6348869894595cffaff2d08edb3a562cd9d3e13355990e76496e4c1b",
		"a1d22c41257b260dda26e3a2fc61c7ff73b2badaa511efcd4ecc4579682027e1",
		"fa45746cd74264ad7f95120cbbc9e2326cc4479c1d9e0be9d68f8d968bcba75a",
		"7d5895bce3fb222a93b922f8c2fe3936996d138607e3d1a2182bfa70d612d7fa",
		"18aaa1713eeb1cea55f726a7b2485f3c21211c8021811bc43964b2b97efca144",
		"c78b9ed2beb1038427c5c94e174c031b273ab91a03245dad371fa23dab735d12",
		"2e071200bd0a5e9e0cf476657e642cf629091256f691cd599e5fe5c47a48c842",
		"ecc6a095a372588c8725ac9a180e0756bc9314540a7bbd45060586e6475787c6",
		"bd81ab22cef08b78ad5cfe45c83453a5e4566896775f1f982351034230040dcc",
		"6209ca8803fafb6805ef3c90f8ad8b33e7110daa8c28b94ecff20760b67849fe",
		"c5d1a7cd885839ed08ec5f672d63d73485c0e6c7adc8d175c7dbef5742bb5035",
		"c68e1ffb489f2a4ff50fe1b7f6db83692b6b77e30e103703777fb26557321408",
		"d27b4a5c19ea3f9b64f0f33684fb58125fb1dd8642b4b4a5d4181ad826226322",
		"08dd5f19ba096438e67e726fce17ee4b5b80efb3a88884b990c8bc9d382af60c",
		"2c1ca60f98562e6ac8f13aa49f5cd620eb2a25b2ec87d74ec5c405e715a9af5a",
		"ca35bb0f5862cb938d5b6b97d140759b734ba718b37253d8c505ed6098ec0e59",
		"16aeb034efd2d2a1bb2fa296c8ed2dde664a3f4ba4079ecea7995e0fa86054b0",
		"8c1e40121ba37b665b2a3b19bf8b1a6c8e5b1f2204891faf6ef839636cf921c5",
		"e266807346d7681b83fd9c4fa188aea454d02fec483760b6d12e8db57caf8a2e",
		"57a892749266e8ed92992151c9730d6ed30361ebe2cf6583647a4b88f0f95577",
		"eca6edd0691fa5f40905b0764998fc525db55b03991a707ec6ba57d5b7915fbc",
		"1c09fb20a7770c117b9bd2d2aca3bd898192208b8d84f0de74d14ea7011616e4",
		"5f6669463810d15e3ec3e06d8447d25e9786b63ab02408bea937fb0cd9975278",
		"c1afdc1d6270db1e0cd1e5e67c2b96ba6b924f990f4e71fd6c4826da576934c8",
		"290ca7ddbeb9466120052d91971f9b8b988f0b6ee80e375e418cc1cac8649619",
		"f2f1ad60dd1c177b01066781157a3407f96bf58d15c4e4af32376877455e8727",
		"d221757b3c988dee42d7ce4a2470eb81903ec8a6a12f4367513bd2f99069cdcb",
		"9a23f79d9dda384310abd661709ec9a5ff1878be2ae69fa6e9d5d12adf535aa7",
		"c9c99427b963a7979ce52d370badd99a9f41b480b33f756cf40287eeae686a5f",
		"5a4a2ca6107994af7821226d7237953a9c9502b98f7065b65015648311aacd7f",
		"39ca877a6aef399146ae610c9d8197480d307c100137eb46df31571106a50467",
		"54f5bd6062f4a353172347c36f9d4afccc416122b44468aff8732d89878ed07b",
		"71c149f800c467c764731690f4a4cdc84dfdd66f03c7a18312e75cd3c9ec8b06",
		"a322f82c9de755d6fc8687c8b3bf2249d8c7e87560ed498a5126a79a94f6971e",
		"f32d8c80bd8c5756893e158d79f0b245f81c078cb386c9b155a5e8a90580a802",
		"132575d5d7bd275fac01701cc0d53f5f3289d6daa57fc98da20cae90392f6c51",
		"d37848c31175b8ec0297fa338284736b69f36ee2d44738bf6dc954b87c2697ac",
		"df66a96b272cbda1be3a1e77bcd74d57d2b96363ccf00e313c895b1a34c641e3",
		"0330b01d48dd9d9a74e204cac3b675f78039f4f12e28759e4c65e331d7087720",
		"6bbc561c1ce20d1e8c4be8a93afa5a6a76ccfde1f7fdaca7ea8df6322d264e97",
		"6569d80d79fc2f89b6a5f4ced0e9d904564c1126ac5662657abd66562a826566",
		"8807d6ba2cd23694c036d96442ae09c16383a5afef0ce47a6f31f4f26c8cc3b3",
		"ee39c25a113e8ec346c9cac98019e8a35d69c683ab1be1d8223990094cd15c83",
		"2c9c7f6c0fc372d1c6b7d2d82df14d991b03319774f6d1d8f094d6bd8b82fbdb",
		"64e823b352f90b463f4028a007701451a1db51edf6b8fcf35b564bb1c5921f62",
		"f14ef6b3b1a15657fe6a25ce38aaa392c4602b3f39957245d724c75bfbe51b08",
		"8cf757b35aedcc5d96ccbb653c74c23e2123754ccfebff28797b7616a4c273bd",
		"a4211328be978a2cca75abdd8145b32997b699f34203b855c78e68b95bb1b804",
		"9626c6467f86b9849e7d210f108494ba4d49e81ce435a6c868139e7da2f279e1",
		"db91439ecf4b9c3e438ee14c88e654adacfe70a4081c8ac72518c997330b13ff",
		"275d96074e2ef7d950af83227f0c55fed96af487b0b5fb99d8e4c4cc67a0f6ab",
		"1612b6f0768fcc24d819cae9bb86b88a4f42c45d6007793b57a6188d74b4117f",
		"6fc1ff62d990c37570c2098f3f1315c61d687fb98946d4d5463253ab1b42c8dc",
		"5e4eb1deba8af35bcc0065666b74e816d742c1216a1524c5afb71eff858b18c1",
		"291cb7299c70a63a90b938e9ab659083003eecf077854504d645f43e6c854bf0",
		"21975bdc6edf274d93c889144495a3c9ea4c58aee706d7437fb0ad2d755abf7a",
		"74bf62ee9f878549cdda468ac2d6b4b1087b2cb2be6fd952fe33c38155be2e69",
		"ad92bcc3af9dfe1ec0d3ccc44cc4f756965bfde5dc89893391254b4e03fb0be9",
		"9b20d79a6c7af73a1a5f65b215fb4624d2e737fa1e9a771a6f9ce7454231da94",
		"cfec27f986045d1f77420f1de8e72886c58f55ad89f6abab8d2295145cbb537d",
		"dc49a2c6683b48f2bd505290913ba7ab9fc82a6c4dd38edb3df2849be2b0b7e9",
		"c0b26a95ae1222dc77ef5f755f7c428790ef2628abe0d930e8129315f6f52f0a",
		"86faec0deaa94d81142cc3ce5fac0393687079d616145ec20b869fe845088663",
		"8e9b2819268100eeec69ad18afb0e4c92490bf05f15a9069ddaf606fc696b145",
		"153441f3f9f25348aafb61a8453ca854d876454182598aab4502bfe325a9bcdb",
		"ece6490d9d58a1afb42a8b720f248a6d067c9ebc8c33b17b8fdc197142b8f378",
		"75c83bb028f72b31307deeeaff9924c0d692273cf11f1ce7ed79accaebe72345",
		"f8f7d560619ef502c4fd9d6baf1713b8f1cbb3d6145858163d635034d3c37ea2",
		"781b718be72fdbd585868cb75347b981cefec3ab90e4862abf23fd1f52271e17",
		"7d064a8dd1b6feb840928539d4f31947923a648a9306e6dee23d67759e7556f1",
		"64255ef47f7410fe5cf64e1a2a0cdf1773fdf2273fc35eaa3e0ffb11ee75b158",
		"e76cc044de53a653e82196c768f8d09946731978891fbb4ff3e62fe0aaef3677",
		"a7aff10947978f5157de08f5edfb41174102a632f266f32b5a327eef591b2d66",
		"c4aeacefe23b8c01af59b80b5b68bbe94a3f25348d8e4a2f08077dc8875aae9c",
		"9eef1e7f77a801605e2c4962fd2590ce1765f3dd4e04e84f1a9016117b79ff7b",
		"dd3c96c374a45f9e15a50937b06a0bcf29cadbf81758ecbb8065ae4257ebea60",
		"ec1e5c27c5795c65d29e4840cbd06b427694c4fff5d2dcd8cdb135846e57bb48",
		"b6292a8be1c51b0402cef5c142a165d58fd9a698d2e0bfbabcea2e6aee7bca8f",
		"86968128aff6da05a5faad4ba6eaf4873005a1d140c5d2b14c7128e3ec51f3e0",
		"fa0c37a3550a4ed2a2c2cba7143977fd71b64d3412679c4e4181f8073c4f42b4",
		"1d0fada17acedeae23d322b0fafdddce907c3ed323d7a8cc3fabf77de6a88d0d",
		"f3759b959007946a871809fe48ab52b0483bc7f3bcd4843a2334b94d8d31d7fe",
		"46e8dde4f0b26e23e7438c7dc1a5c1ced4408ef89a5ac1f90644aa89dc39db83",
		"e604da32ddf19528cbe5fefe943d8c8fad91c07d8b8a6c022fce404b7030d759",
		"807b7de75d96e6f9e1a046bf1e35a6cf35f6ae7ee07cbd8883875210ccc2a579",
		"82385bbe1c5d1b278735b16cabd297675492baf99353ed28029973db9c757639",
		"fb89bf2aa6374b3d7ab06225dfb792a14c694f5bccdb4e96ce22545743ea0cbb",
		"d5269d2321787cc4f8b771a3a449d95e9fa0672a2ac664d93b4ed6f8a69d6f5a",
		"85dac83cdd1abdadc97c84178db3d2392451932a408463fa3f5b2eada21f5265",
		"a345310ce421c30ede7f4c165d83e6b4d43075d2f223c11453d114db6f8773ec",
		"009eb6dc998e263c5f43e24cf65950b4145be736c0c3cce07cf7362d6a0e605d",
		"94cf23e3fed5e6870072fcd6e7a619776483a90b146944e78d82225d1427ae6d",
		"322b6229c036c0f0dc590bbc306bfe5143b19856fcdb533f3341159e5c5b9aea",
		"97deb53b4c9a73aa5a625c8f2413034199f53e67042fb3af8046130aefce3553",
		"8c7a2816eff9f117895130ea7a52d7a39ce1b5f2e1cdbd621e4889d633112901",
		"4b9a1b1ee0b4882d161d5e2966db6f32ef5833fc1454655e17e1e44b86a417f8",
		"c99cc56f3131d33789d3a5063d8093b2ec60c7ba7a52eb8255e761511018d25a",
		"01d8328e4811c521b08c469cad80c7d8bd43a87a8827b9301ec4152f1c0b2f96",
		"404d695a0915abfccc37bebef64ed6049c30f73610c606792bfbf8917058f3cb",
		"df4bdcc4abadced0a6fd88bf17556f950faf497fd95b5438a9bd583ba0840363",
		"df9a5e11578a3837f7921032fca1dc3c34be7f7ae6d6fe238c3ef9457dd13235",
		"38bc7aec8f22870ff4b67fdcfc11af718d5226378984e09d02d5807e454b5901",
		"ef515448d707ad7133753f99624cd036fd524829c3a46b888062ea16641b4d7c",
		"5def9dd2de6270124bcbe3941f8f21dbbf5bb278f7e4ca66f94c608eaa4f2760",
		"59eb15ebc4e0ce3ce953d60996893e1154c4031dfafd0fb1b61e7a08ac50c7a4",
		"548ab5264761de8edbc4076f6ac5598640b86ac9ecb9ea24763dd0e71ca025e4",
		"d408103959be6085d1dc63aa1cdb8e63debfc9b0323cf76710026aee4b167a25",
		"d8074428d902ab4a162041e8c9b3b68b512d30ba695abd79dcc17ad3baec87d1",
		"b12f1b87d564a4fe69596906ca30cb98c6342eb6af02758a69d76a2a22354649",
		"6db21e98b0f51c300ed5b97e6ce811e4cc4cdab280449b69a1159e9df3e7269f",
		"73b49006b847a776c29b321bb5a9ce446261a08258d8512763a8af7b17429385",
		"58ce02baa414d98acba3b11df3f130d4041cb63106bc81d15de5896e73f5dc13",
		"80876ed648798b17819085f099fdb1368bf7a972488642ee8f32a714f0d93a35",
		"70bc5136cdd98602594f3b98411fbf8453eefcb9dbdeb46ff0787b77d94f3568",
		"868f7b46c11b53def5bb185ac22a73623e0a7cb27c9dd4740023fc280f4450c5",
		"5a408f1e3099a78a48e89b80a35f085d380ba2d6f12a2c9798a13a93a5e0bb3c",
		"e9c891fe90f04b46e9f7ce2c5c3fbb780bc9050100b82c135a7f44a8e66be6c1",
		"a29ce958d9f359945af5199f32e7f32b1650493c1b7ddc6ee9dd2132eb8c700a",
		"5fd87a935b3d481b06abcdbc7c032f88474b9961c2281017d8b8ff2b0f9e138d",
		"eedd768a22a92f6501a5c65354e2cb729fa526daa12b897b30f73c0cb615fa10",
		"aaf0a7fc1707eec6b1ae7a5d91711593f26a0e687c4f40f736053bc8c85256ab",
		"7dabfdd67b16ecdb72fb6671e1a35c2753a342e2099070c243402196db47b8c1",
		"9a15671c5387b5016e642cfe47f3885ea9d886616b3dcd78b005d2d06c44d7de",
		"eff86c37dd83935738c7189222d6acf8b10de0552c92c273da5a1b12c9dfd993",
		"166b27fa846fe08fba99f4de393f64da3438257f2d373402964f2d33d278d590",
		"bc7411ebad2d5fe90cdb53e242c3d706a8df27af5b8db2ab603fa49a7dbeddf4",
		"246b37ce42dafb681cb329b5c5b360460dcda92e64bd5f80189626ca3c40370b",
		"e74005186b14c2e60ecd9377d8e3c2e2da959ab97c046dc2be59b232a4ba3d48",
		"bd3bc6f6ccee0bb27ee152e9421ccde1886972d70e85a285ef7e4b28ff031c73",
		"794c00db9848481862bc27a3052797ee1c67996e4318b9c96df04bf5bb101d49",
		"a61782598f7625a6d325e94bc42a78632e4d3c6f0090914654438e1edff60e7c",
		"4ea822978d6e32e441b238e7cf9de73e8b3b2b2372623bb461cf8e0becfae204",
		"49e7e6bde7b1339cdc24223c16d3ef35b65cd0aa9a3b6eff47ec4ffbafa834f8",
		"1674afaf7473ff3c074ffa5e2abac726dba5c54109aa392bc2e310ddd27c769d",
		"107e448bacd7e3bb4180ebd7b23261410e092b3854ad9d453d468e80dd4dc810",
		"721c17e6177f79df019abc89a53297504b211ff76e2afbf16ce4f4495d4d5350",
		"0ebab02b8ad0d4ad5eb1c59b37fee9561ef39314be3bd8e6e9fda66f7c4d1e1c",
		"2664ac184622eb258e7611432b2b5e9c8fb35538d54eb81c0641101b25c294da",
		"8a172022f16368949950c064c6561453541bb32c42ffbc8f15184995ddcd0cdb",
		"5cff1666cd7b9d6b4bc0d3a5a14666cef7a2db5838d8487a49578bfc99cb4711",
		"db90fb8659b74759a9c72cfbc7c202fa8eeea98ea0ac0b1118d3936ec5de0ddb",
		"0fa799f67ceda704d0a93a988eb1e6bfc49cc75c0064fdda1a0ea716bd9da40b",
		"dbdbb0aa5d4d220ad79b23d06fe8ecbd7a8f9cd730c92bcab568375c5aca7d83",
		"0fb7df6684fcd80dde6935b23592479f8e0f9a664654764f5779ef6cad0006ec",
		"a171084e08ac129a82a5a1b9aec20936adbe8a4bec26d5313fd36684697e1654",
		"22ceec683d509de41e2f0d13275cda4f846d6a173b4b4a10a5ae1e565c62d704",
		"9383245d0378d26d668f77b154db0ba3f625b0cc7d51fd6ae8138a98f5addfec",
		"17218dcbf38082a93a00008c85524007cb75ae37d0ed65f60eb229e023557c16",
		"1dd946d624546a6963a1830dec6d56d74f35e11a7eb23f6f35f6bcd553735226",
		"9c5971bfdb9b6cffaa072eda97fa95bd99488b15ddf63e6e9b320387bcd412ec",
		"ab089a99dce471ea9bb2f99b689d9361a7d15663365983822ab10536e0d417f5",
		"58df96798f0e82b651bca3417b65843d299030b35055ae7e9601006122068e86",
		"5cb8a7d761df5fd25c54fdd451c8592e90d0fa9f7c7e3091d7e8e0c670eadd52",
		"29d65ec766ff6cd7a2823e020a34d8b201bc45101a3c469b76bf3b0d9bb9411e",
		"ca9a0592c80db1f78efa5ea72cfef72efbc5dfabd63bfed06686513954b7fd69",
		"6c71c9a70039bd6e4158f1e9fd1822ff1da9ccff85286e6b59dbe4f582ebcb7b",
		"c28ad48bd1c364a4a8b9597f82352006b8feba5686b8c16e6520bd9e2baedab8",
		"1c8fba1d83eb4f82239d56aef687ef9199a89542f9acc38b31781932d06fe495",
		"69f59abd975b249631e5326b5c190abe979102c2f28d28d7cb15b89195c8da75",
		"a213a7aac850fa372b58777d7461d90a67b573094208254afcbe390c123a0e9e",
		"7586ea4c5d6499b3125cc9553bbbe007af4d8c9f0d873767bf3dd8a1bfe1ff29",
		"0f48a2c0c3116fd24709f77aa937b89774739333b2e66b8cc37d3bf0bb23e555",
		"d0f07564d2b120ff020a5e631b0e338fd4c8330cde17b308317c76004b2f5d4e",
		"6c6f698c86d2efc8dd9bb362cf71393505b783306ed6c7bdeface0630c4b014c",
		"93bfbbd84006f1664a55cefaca11631ad3d86de280e1d16ea882feae6ee1670f",
		"a321cff112375e354eb938dc8be342c40afc9863592b614f20fd6e1bc5bef84a",
		"ec21b6482f385093ee48a42085d5b4bf35b1b6894bcd769029e4e5949a66c495",
		"372d86d145b3526d4da2b5ccaa30bfb5270c8c283ffbe4ad849df2b3e28bdc5b",
		"f35ab479dfc83fcd459921b4b687add7133c02d0568d825ad78ef2cc7e3cd12d",
		"1d5e5a9e7a7e78f0cd0c5b1a56a86c5a5bdd387f6e00747257d1c382c51071e1",
		"38fb7bf7690c9f946cf94b70e5beb12394213cb9e19c5338447ebdd0e53dfce1",
		"2304268d48c2041da3a9ea66214412dc474447d406748abf6ebe27b28204f87c",
		"2a4002ffb92f55c33a281377776eaa7420b51b192d5d5b03d76bfc40e2b8f156",
		"00e0bbac61eb58144cc046b49897e02fba6d72cf40955dbceb8a49ece3823510",
		"2efb36918e143766ec52be2d18f528a53bd15332289ab137ead0abd7ce208512",
		"410ffda3a6016172fcc5b193f72e8623d28f870472d44dbd59568fe1c4631875",
		"33220338d34f8f40834717397a449881d5c9ce22e86a0830001c2902c5be2827",
		"2a98f596692a010405cabf76d170e28ee09aae28fdaaa8eb2d837baa27f0cc73",
		"8beb12ff62ed164b2a701dc2ee645f08ff53b3495523bfb4f3ea537831d188d5",
		"d21090079483279deea200b94e346c0710aaa98605dde45ef69f19ea6d24686b",
		"5471026e2d462b452c0c979dfbc5fede0e34bc7b269c3e8a18a3bc0d8db682d2",
		"f7ed9a338090ebb236a9cedbe77623ba331160dc1c22c1f046011a893fba9947",
		"5afd0582636774fb3d97bb30bd3cec2749c4b9944fefe1b931ee51d73aac376f",
		"bf11bc8d2cc94ff4f1b304ee85ccb7797ae9c8e77953dd8017c6f195fc439133",
		"41efae7eb665d3ca9a1b884e9608b661f901dbb97949009da15509ede1409136",
		"4a0a5e4c360d11dfe86cc1e80df8c7731f4153008e10b9214c15c83c3bd43474",
		"1a0a5895031f1b91330371568ba8d2c458abbcb572f23ad96713382c54e5deca",
		"b0a051f3cf5541c9f524e5b42268d437093c51c1f6d8c80bbe0b9d0327a9da51",
		"035c476f4d3dcc9c56003b7d582e92fcab12151cf8f0fa4d2564f97730a9e72c",
		"f417454954316e8202d2a2142154fd3ad2190fbd8c8eced0c3a26ffa9665ff7e",
		"59fc00716d8208cf373d6260a4a9348d31ccf8d3f21fae4814063a01bcca14a9",
		"4ba5b53a7d636ebc6b003cfbe451664a4d27b22cdaec78ddc17c2de629e2a75b",
		"a1171ff994be87a02dd2b9d80ea232facf43db0588496bb52eb51d70fac7a932",
		"ae43407323056317924e1aec2419e0ef758094ee493af3f69ca097599c10bb90",
		"e2136b40aa0392b37a709aef4c18367924fee4ef8b95c29d775f8b9eabf041b5",
		"c0dc8645bb327aa9718915d6ab1fc9fba50c180daaede1226da19d5380ea61ed",
		"2c8ab60500a763b4f20c5ad8fbb854fddbb33430df856a942e196f3d19af8e30",
		"b9a6df59aefd23c67088e44245d79ea25e7d44e713a45b97e884291cef643c09",
		"6c2e0537af3e04e3b577f5e040bd2170e567b5795b795dd79dbde727709bcea8",
		"8aeb879bffc3a6848aff0e265b0f39cac1ce808603244c40eed7ba09157239aa",
		"5a4d766376f2b9b4801be62d059ea7b5df487634b44aff53d1470be4dab2988f",
		"c87eab7a2c613e1841e7ad5390e99e4efeaa51f5c7cebeda97f8e29c538ff39e",
		"263c7f7ba446f9827e1eaa616cf99e6729158064154fe7453b9c03eb1ee6a886",
		"29a8b190d417bf44c2fe865334a7fb6bb4eb35fb4befaa9de2e40ec5f3f0d8b5",
		"b3517e37801680c72d456bef61e0b0afb080de27af0b171e8f946895f408d1cf",
		"b6015c208d85a3f43a09bf65461bac72c5742d2f0bd14668fc73ec77f4108d2c",
		"6bb32cdb866e2a350fd6a142d2135fffcfc8bb5b0f4fffc3c1c49e028b43f5f2",
		"302edb276d44dd5e76dbd7ca8c9b1395fa14397f33bd5becb972a1ea8857afab",
		"93ce4f84253afc72b3d33bc71a5cdb3b1202ea21c3ccc83e8e9b4381cc82c46f",
		"7aaf66c4593ed4edcf86936082bf2b9e55ef83a31025147c29cc26b191013397",
		"5431f6fea9d9767d1a35fc353a5c4dbd06eba8062e842cff09bca885ed68d7e3",
		"7587db765e44db04c844326df43cc89e40ec99a85c02c5ef842c51c0c6fa7eab",
		"342ef596900eec3d863dd3cb9835bb72752b344c51facbccf95f7d78b61de2a8",
		"3c93b342c11c339c2c3a50ef0fac5960dcc374d10101d3e5df0728ffd8e35d3f",
		"36a054625f898796a5bcea0b2b21edc89151192f2d1962f77fb8608c81532030",
		"2c6405fc619757fdc70a58c2ca3e11669b48c7bac83b8260eadd76112a10fa3f",
		"c441de3a77509b5c8fae8168c85205a1ac6d2f42ecfa25644aac5c959901c5b6",
		"3a1cfa4cef314dff1b44e482713b6fc16feb68ede20615077416cbff9eaec2b0",
		"f772db05695c1ac7ff6589a9348111e553349e1efd047f3a7b72400912058409",
		"5ad11c32c90216c23cee51a715fab98c22aa4d0b65ce5b358ef74fea1ea80e6e",
		"4e19de5a8758325eb74550bc784103307e1f5b782067690189f6b76ce46fcbe5",
		"1120b9090d47873119bb6d327cfc866a8d426ee69353198c600e6ee3f09b4916",
		"d3daf5627911e06c84858773b7104f42a551399a485afd2a72efb649525e0d37",
		"291ad4527cc7c51990342cc1c9bc894541dad83f689ac4d014969b3895670b54",
		"21b098fd2f3929aa016bdf5aa94b426c3097566309015936f0179ae9981c3f38",
		"3df50a0ca3890c11f06ca96bf008211b1855fdf344be3b4a020db8515352c8b8",
		"060db7b5c1ba7516d3f2ff6569a9e694802a59c77bb5a8f82928acf4bce339d0",
		"5beb7c3bdfb9d0e9514298ea7d3bd59217cd9b5a5ca9b74e6d1b6aa469972691",
		"976af8cf8231d5102ed3a2c9af36eb0ded97970194556299748c3f704de4676d",
		"1d05d8bfc789fc3632a01c62febb71e9e1f09205a57bb12e0c5abe2914a07db7",
		"a8e8463e98dc7e77d68b81008defbe9147cd3e44881f7b714db2ce711bcee572",
		"420447727096e3f83963be9baa2ed9b8bd11e7d0a466f974b4b3c8b2a045a243",
		"2d0323ad03537789ecdc7ecca22c56fe91b0cf10f9e4513f879674733175df3c",
		"c9afb92ec8f72bacb2071d7faa1f605f6e2d0eee40729b395f750cbc780c5c85",
		"e60ee9ae49ff14e890e7b6f739f2d11e8f97aff6814eb8ea65da2b93e052cd13",
		"1455434cbb0e864957997b511a6c550b4994ab1e1c671eb7afefc30c9064366f",
		"9dfac202e8e36b42e2a1655d563fb75ac0bed703a078e4614c939f4fe232b8bb",
		"0cee69f8e8d76598ae79fdc4494f6909ae8917fa8a3d5637aa492534e86d5f75",
		"08a97ea29ed12a68fbc3654072dadf0004abe478171bc6d0fd71a2d9fed6e5be",
		"e00e66e8d7272561af38037bb47020ea82614f512c8b5a164d52c97c608352e4",
		"d16a54fdb6642d15a4f78ea7b23c8448fe2e59dd3316bcb0102eb482a2eb8a71",
		"4ca607e118a33a2bd4a5206094a90f7a5c6e4248f2443654cf1d618362d8400a",
		"650919131e0c66144d569c25e732c695a59c6c99c877769971bfacca1b6e6b23",
		"a4a6f6177eff71898d42ae98804d57d9ee49d3fbaa2c8ecae81d739c3b9f4b40",
		"f3f26fdf02f4f390be47ad29df6ca1d45f8dab99e4d321bf66006fa0ea83c92e",
		"4d3595bac132ba354cd495c4b9ae1f638d2772455cbb5377ed497a6ccc7c7780",
		"71d25bc1ff7fb926f14ed77943e2e4b17721b4e73c5c21882a467f01f38b142a",
		"d7039adf06ece631fdfd651a67633eee2acacae88388effdbb856310ca38f877",
		"d402496881074ebde7ec1becaeaa7172ebb8b34e85a92c97251c9d8d8b0fd593",
		"4e5df209b8bee400f413bca7cb49004839e5893cfb4740ca3f14632197d0b021",
		"db74c7e57822f6750a69c5f4b7c41393be13b641f75c549e137bc94539085c2e",
		"bb94e08c2c7e0b8cfa91d6200b36eb0cb7aa2ad3022a6d738ff60ef3cf284fad",
		"ee7218c18365c31794c48a71fe7e81276c321daf93604cb7646f78d9f3847b05",
		"8302198cee9a65497b235db4e28a770f1b9f2b28c8f6737fc5a9ad1a3d5e33df",
		"a41d4e02f9c9b30cb9f8c2575d9042a859ab94d3492bb4001b299ab884872156",
		"5e70a3a9a10882382dcfc394c8cb691f02ab5792896306eb0e9aa015198a1eb9",
		"ea419c41b0b1a160ee671b4ee9bd9f8e68611aca4e9548df93488c4d95b2168c",
		"a7359a8ba900ca141605638f035502f5bdc9a592f7dbc934adabc6a3192327e4",
		"9054f7c9bc443f0eb75e3dbf0f6b3acb991711e5b4eca875757d40b3897a8613",
		"a07fbc6bd92e9ebf1586376b03d8ff2a4f9597a98778423009bd35528ce1837b",
		"79a9c7d6ce0ce58041d80623ab1334d4d64820acd632c6f1dfa6e6210a0b2268",
		"8a2fa92447365741a946db886e7cc19dcd5fc1656450b33034f36cdea4975897",
		"7c1adddda146012dbfdd01818b38a5c4668e1c8190014c54c7ef9509db7697f9",
		"489b9d3a2676e42dee0722b6924db734febe4538e5111d287e24be41571daf32",
		"0d309201157718fd3b6e0b703718aac9c56da922e5705575c926833d6b732873",
		"f53f8a78c5928d842cbf8639c4979ff9244834a0ad9dcd905fed79fbf8561ffc",
		"d6dee7fa5f0f502562d21c258bde1a05ec7d30ba8b5ed0920125ae826697734f",
		"623a961be5860c442810fc4c51fb993ae68cbe315156fcc6ff36423ac91004e8",
		"0929c5123e7bdbc09f0ff321ab21bc983e785df84f62bcecb8bf0307a3ba557e",
		"e8db9ac44a1883bf6293299fe052e9fc410ef6d44eae659d4c1d962e52f89e9a",
		"58e2181d5468e34c6a06aaf3db12fe58ae9a9e9067301a1ea0abf7ad2cb56ef7",
		"a2492a283f68a85e3d93b44c5baf9fe530feefaea6bf2d2d70383d170d1a62bb",
		"37cd00fde56b9e64368c38c9219c96e73180215d253e1f5c384364990cd7a5b9",
		"68bff2e2df8d8954039cbd271c711dd5107ce809075454775920053d53d79a2f",
		"a91737ea90a5580b287872c30b61bed03a4acf68cc5c1fea1c43d214456521f0",
		"aec5b0c2c30b10105443044c8c38870fb3f1687856709f149109dc2b2486d96d",
		"e79171f7360525bb4086ba9089b0346f1295a80374f9108cd7a1b5a733e5ea19",
		"1f347c6b0fb2db19f8188f0beced76525fbf049d44374f694a5fb56f313309e0",
		"1d8d611273b790c31f6479781b76753502e46cc2ce6654f132c3991f872d755c",
		"a8adfbab9ec5f8b32a988d64c754db826c4deb021b95f76f639a1a8d68bf6350",
		"7617457fdeeda21ee8692e454dfd1d8660bb5e3ba5da1e5bf99dcb560d52ad81",
		"013d5e0d6f367d43c73ec6beb643b163e6aeaf9ed57fc53b1ce8c074b1c20e50",
		"61513c814f3327059aa8064ae267276743b6c4a9d4918cfb066ef6ff74154951",
		"ca62ec0741ceefc18b6640ad43c82e37be35fab66dd87b90ce518aee68dbeeef",
		"f16b5e8f0986dbdadf43ceb81cd8576c4337aa2b4c3a3dff332f018af6d038d3",
		"e86b77bdfb8fea3fb9799785b3162c47ac5b6f6b528184296626bd12b18e1b65",
		"ab35c8633d383dae87f04e3b0f9df8695a078426376941d5a4d74dca06e87a5b",
		"fb3bdd420265195f5887b1a31745a5f9086508408ccd055ac6fb3b7c0d7f93bc",
		"ce7638210a60044a149372578d6e855941a410174518f59da9a9f3adf1004441",
		"c8e8b5f6000ef5f8b341b00e8839b63e09afbf3dcb8d4101c5f263a1c60842d9",
		"12ab0a2bf14e84697ca451fd51c9f42535a7f09c60361fa9e5842fe885ae6eb8",
		"c72ce5d6004c1e94d744dbbcf6f902a67712f66bef71791238b0ae0f9d5b0361",
		"9fc88f4233c5e71d5f40c5c62fcf8ccf77bc5cdd6dd9fde4d6f900c64cb3fb74",
		"4e953a2a68c5d30494907760c9cc85e5f62baa44d6cfb6db8bbc5f8d83f2bcc1",
		"319017018ad774c4a2d88de93887137109b31adb6546347ab05f5c61ebb6d334",
		"3de719ed629534a70f98650fcffb9ea9ef091008cc8571765b9a312f2e9189e5",
		"282ffb8a65c2d7a7fe84ac80223ec747aaa6311524bdc498f1c22beac69008e6",
		"25430e77cbf3a34820c47d37954b694587a9ebeae1b20510a26068e6b071d11a",
		"ae59e7dfbfcb6bd66a7a5832483962026d2eb320c8d65984cf224df493174ad1",
		"4438a0727897e9e181f2c008466530f682a62770d1cb1cbfd9f375b9ac934f05",
		"340bb9d1c5327139ac840f8ebc9a1debcd3cef700ecf2cc826fa97143f7af855",
		"e785a0a300ba53e68ec644c06cc18ced2d4b30d42be684cf9d0e20358e46fa67",
		"e4b522299f15c4591aeb32673a48a1c9184fe6dda863547107326261b023f621"};

	
	private final static char[] HEX_ARRAY = "0123456789ABCDEF".toCharArray();
	private static String bytes2hex(byte[] bytes) {
	    char[] hexChars = new char[bytes.length * 2];
	    for ( int j = 0; j < bytes.length; j++ ) {
	        int v = bytes[j] & 0xFF;
	        hexChars[j * 2] = HEX_ARRAY[v >>> 4];
	        hexChars[j * 2 + 1] = HEX_ARRAY[v & 0x0F];
	    }
	    return new String(hexChars);
	}
	public final static byte[] hex2bytes(String hexString) {

		byte[] byteArray = new byte[hexString.length() / 2];// 2 Character = 1 Byte
			int len = hexString.length();
			if ( (len & 1) == 1){ 
				System.err.println("Illegal Argument (Function hexStringToBytes): HexString is not even");
				return byteArray; // return null-Array
			}
			final char [] hexCharArray = hexString.toCharArray ();
			for (int i = 0; i < hexString.length(); i+=2) {
				// 1. char in hex <<4, 2. char in hex
				byteArray[i / 2] = (byte) ((Character.digit (hexCharArray[i], 16) << 4) 
								+ Character.digit (hexCharArray[i + 1], 16));
			}		
			return byteArray;
	}

	private static void PHC_test() {
		int i;
		int j = 0;
		int testVectorIndex = 0;

		CatenaBRG cat = new CatenaBRG(true);
		byte[] pwd = new byte[1];
		byte[] salt = new byte[1];

		for(i=0; i< 256; i++) {

			byte[] hash = new byte[32];
			pwd[0] = (byte) i;
			salt[0] = (byte) j;
			cat.hashPassword(
					pwd, salt, null, 
					2, 10, 10,
					hash);
			if (phcTestVectors[testVectorIndex++].toUpperCase().equals(bytes2hex(hash))) {
				System.out.println("phc vector " + i + " ok");
			} else {
				System.out.println("phc vector " + i + " failed!");
				break;
			}
		}
		for(i=0; i< 256; i++){
		  
			byte[] hash = new byte[32];
			pwd[0] = (byte) j;
			salt[0] = (byte) i;
			cat.hashPassword( 
					pwd, salt, null, 
					2, 10, 10,
					hash);
			if (phcTestVectors[testVectorIndex++].toUpperCase().equals(bytes2hex(hash))) {
				System.out.println("phc vector " + i + " ok");
			} else {
				System.out.println("phc vector " + i + " failed!");
				break;
			} 
		}
	}
	
	public static void main(String[] args) {
	
		byte[] hash = new byte[64];

		System.out.println("\n\n========== Dragonfly (FAST) =============\n");
		System.out.println("Password, Salt, Data, Garlic, Lambda");
		for (int i = 0; i < 8; i++) {
			Catena cat = new CatenaBRG(true);
			System.out.println(cat.getVersionID());

			System.out.print(Password[i] + "   " + Salt[i] + "   ");
			if(AssociatedData[i] != null) {
				System.out.print( new String(AssociatedData[i]));
			}
			System.out.println( "   " + Garlic[i] + "   " + Lambda[i]);
			cat.hashPassword( Password[i].getBytes(), 
					 Salt[i].getBytes(), 
					AssociatedData[i], 
					Lambda[i],
					Garlic[i],
					Garlic[i],
					 hash);
			System.out.println(bytes2hex(hash));
			if ( Output[i].toUpperCase().equals(bytes2hex(hash))) {
				System.out.println("ok");
			} else {
				System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
				System.out.println("Test vector failed: \n expected: " + Output[i].toUpperCase() + "\nResult:   " + bytes2hex(hash));
				break;
			}
		}

		System.out.println("\nPHC TEST: \n");
		PHC_test();
		
		Catena cat = new CatenaBRG(true);
		System.out.println(cat.getVersionID());
		hash = new byte[11];
		System.out.println( "null");
		cat.hashPassword("null".getBytes(), 
				 null, 
				null, 
				1,
				1,
				1,
				 hash);
		if ("7f219ce0901cd6fe2726d7".toUpperCase().equals(bytes2hex(hash).toUpperCase())) {
			System.out.println("null vector ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("null vector failed - expected: 7f219ce0901cd6fe2726d7 \n result: " + (bytes2hex(hash)));
		}
		
		
		cat = new CatenaBRG(true);
		System.out.println(cat.getVersionID());
		hash = new byte[11];
		System.out.println( "no password");
		cat.hashPassword("".getBytes(), 
				 null, 
				null, 
				1,
				1,
				1,
				 hash);
		if ("23683ed853ff5e8ada489f".toUpperCase().equals(bytes2hex(hash).toUpperCase())) {
			System.out.println("no password vector ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("null vector failed - expected: 23683ed853ff5e8ada489f \n result: " + (bytes2hex(hash)));
		}

		System.out.println("\n\n========== Dragonfly-FULL =============\n");
		System.out.println("Password, Salt, Data, Garlic, Lambda");
		hash = new byte[64];
		int len = PasswordFull.length;
		for (int i = 0; i < len; i++) {
			cat = new CatenaBRG(false);
			
			System.out.println(cat.getVersionID());

			System.out.print(PasswordFull[i] + "   " + SaltFull[i]);
			if(AssociatedDataFull[i] != null) {
				System.out.print( "   " + new String(AssociatedDataFull[i]));
			}
			System.out.println( "   " + GarlicFull[i] + "   " + LambdaFull[i]);
			cat.hashPassword( PasswordFull[i].getBytes(), 
					 SaltFull[i].getBytes(), 
					AssociatedDataFull[i], 
					LambdaFull[i], 
					GarlicFull[i],
					GarlicFull[i],
					 hash);
			if ( OutputFull[i].toUpperCase().equals(bytes2hex(hash))) {
				System.out.println("ok");
			} else {
				System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
				System.out.println("Test vector failed: \n expected: " + OutputFull[i].toUpperCase() + "\nResult:   " + bytes2hex(hash));
//				break;
			}
		}		


		System.out.println("\n\n========================Client - Server=============================\n");
		hash = new byte[64];
		for (int i = 0; i < 8; i++) {
			Catena catCI = new CatenaBRG(true);
			System.out.println(catCI.getVersionID());

			System.out.print(Password[i] + "   " + Salt[i] + "   ");
			if(AssociatedData[i] != null) {
				System.out.print( new String(AssociatedData[i]));
			}
			System.out.println( "   " + Garlic[i] + "   " + Lambda[i]);
			byte[] x = new byte[64];
			catCI.catenaClient( Password[i].getBytes(), 
					 Salt[i].getBytes(), 
					AssociatedData[i],
					Lambda[i], Garlic[i], Garlic[i], 64,
					 x);
			catCI.catenaServer(Garlic[i], x, 64, hash);
			System.out.println(bytes2hex(hash));
			if ( Output[i].toUpperCase().equals(bytes2hex(hash))) {
				System.out.println("ok");
			} else {
				System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
				System.out.println("Test vector failed: \n expected: " + Output[i].toUpperCase() + "\nResult:   " + bytes2hex(hash));
				break;
			}
		}


		System.out.println("\n\n========================CI Update=============================\n");
		System.out.println("Password, Salt, Data, Garlic, Lambda");
		for (int i = 0; i < 8; i++) {
			cat = new CatenaBRG(true);
			byte[] updatedHash = new byte[64];

			cat.ciUpdate(hex2bytes(Output[i]),  Lambda[i],
					Salt[i].getBytes(),  
					Garlic[i], Garlic[i] + 3,
				       64,  updatedHash);
			
			cat = new CatenaBRG(true);
			System.out.println(cat.getVersionID());

			System.out.print(Password[i] + "   " + Salt[i] + "   ");
			if(AssociatedData[i] != null) {
				System.out.print( new String(AssociatedData[i]));
			}
			System.out.println( "   " + Garlic[i] + "   " + Lambda[i]);
			cat.catena(Password[i].getBytes(), 
					Salt[i].getBytes(),  
					AssociatedData[i], 
					Lambda[i], Garlic[i], Garlic[i] +3, 64,
					Catena.REGULAR, 0,
					hash);

			if (bytes2hex(updatedHash).toUpperCase().equals(bytes2hex(hash).toUpperCase())){
				System.out.println("CI Update ok");
			} else {
				System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
				System.out.println("CI Update failed.\n Expected:\n"+ Output[i] + "\nResult:\n" + bytes2hex(updatedHash));
			}
		}


		System.out.println("\n\n========================Key Derivation Mode=============================\n");
		
		int keylen = 129;
		for (int i = 0; i < 3; i++) {
			
			byte[] key = new byte[keylen];
			cat = new CatenaBRG(false);
			cat.deriveKey("password".getBytes(),   
				       "salt".getBytes(),  
				       "data".getBytes(),  
				       2,10,
				       10,
				       0, key);
			if( bytes2hex(key).toUpperCase().equals(catenaKG[i].toUpperCase())){
				System.out.println(" key derivation vector " + keylen + " byte ok");
			} else {
				System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
				System.out.println("key derivation vector " + keylen + " byte failed.\n"
						+ "Expected:\n" + catenaKG[i]
						+ "Result: \n" + bytes2hex(key));
			}
			keylen--;
		}

		
		//==================================Keyed Hashing: 

		System.out.println("\n\n========================Keyed Hashing=============================\n");

		byte[] keyH = hex2bytes("00112233445566778899AABBCCDDEEFF");
		byte[] chash = new byte[64];
		
		cat = new CatenaBRG(true);		
		cat.catenaKeyedHashing("password".getBytes(),   
			       "salt".getBytes(),  
			       null,  
				  2, 1,
				  1, 64,
				  keyH, -1L,//0xffffffffffffffffL,// 18446744073709551615L,
				  chash);
		if ( bytes2hex(chash).toUpperCase().equals( OutputKeyed[0].toUpperCase())){
			System.out.println("Keyed Hashing Vector 1 ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("Keyed Hashing Vector 1 failed");
		}
		
		cat = new CatenaBRG(true);
		cat.catenaKeyedHashing("password".getBytes(),   
			       "salt".getBytes(),  
			       "data".getBytes(),  
				  2, 10,
				  10, 64,
				  keyH, -1L,//0xffffffffffffffffL,// 18446744073709551615L,
				  chash);
		if ( bytes2hex(chash).toUpperCase().equals( OutputKeyed[1].toUpperCase())){
			System.out.println("Keyed Hashing Vector 2 ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("Keyed Hashing Vector 2 failed");
		}
		
		cat = new CatenaBRG(false);

		cat.catenaKeyedHashing("password".getBytes(),   
			       "salt".getBytes(),  
			       null,  
				  2, 1,
				  1, 64,
				  keyH, -1L,//0xffffffffffffffffL,// 18446744073709551615L,
				  chash);
		if ( bytes2hex(chash).toUpperCase().equals( OutputKeyed[2].toUpperCase())){
			System.out.println("Keyed Hashing Vector 3 ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("Keyed Hashing Vector 3 failed");
		}
		
		
		cat = new CatenaBRG(false);

		cat.catenaKeyedHashing("password".getBytes(),   
			       "salt".getBytes(),  
			       "data".getBytes(),  
				  2, 10,
				  10, 64,
				  keyH, -1L,//0xffffffffffffffffL,// 18446744073709551615L,
				  chash);
		if ( bytes2hex(chash).toUpperCase().equals( OutputKeyed[3].toUpperCase())){
			System.out.println("Keyed Hashing Vector 4 ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("Keyed Hashing Vector 4 failed");
		}
	}
}
