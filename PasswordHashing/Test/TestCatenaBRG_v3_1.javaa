package cologne.eck.dr.op.crypto.password_hashing.test;


/**
 * Paper v3.1
 */

/*
 * Test class for Catena-Dragonfly (v3.1)
 * Copyright (C) 2015  Axel von dem Bruch
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * See:  https://www.gnu.org/licenses/lgpl-2.1.html
 * You should have received a copy of the GNU General Public License 
 * along with this library.
 */


import cologne.eck.dr.op.crypto.password_hashing.Catena;
import cologne.eck.dr.op.crypto.password_hashing.CatenaBRG_v3_1;


public class TestCatenaBRG_v3_1 {
	
	// Test Vectors from paper v3.1 or from reference implementation v3.1

	// Dragonfly FAST:
	static final int [] Lambda = {2,2,2,2,2,2,2,2};
	static final int [] Garlic = {1, 10, 10, 10, 10, 10, 10, 10};
	static final byte [][] AssociatedData = {null, null, "data".getBytes(), null, 
		"dataDatadataDatadataDatadataDatadataD".getBytes(), "data".getBytes(), "data".getBytes(), "data".getBytes()}; 
	static final String[] Password = {"password", "password", "password", "passwordPASSWORDpassword", 
		"passwordPASSWORDpasswordp",
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpassword", 
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswor", 
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordP"
	};
	static final String[] Salt = {"salt", "salt", "salt", "saltSALTsaltSALTsaltSALTsaltSALTsalt", 
		"saltSALTsaltSALTsaltSALTsaltSALTsalts", "salt", "salt", "salt"
	};
	static final String Output[] =  {
		// test vectors from paper: 
		"264b837b14c47b07ac4df46d6139b078c1f55af6cd0365ef9f0c28e8ddeea20d73e57f0fd97c3f085c34af8f1d1144295bdc07d577680ab26c228b3315468c1a",
		"66b11125c300040050548d381eff8d3cd97a85834f5a674211b7795f2ac1314d1b7135debbb9bb0caca4320a26c9f2a46b453e2652d4898c0b966fe1bf7ee323",
		"978e99443bd207dd7c26924ec200c9dbaac2d4a4d860d822e012b84256e0e25a3e7a8763ade45e2c12ec10136deaafca2d8518add1223fa4e42602944dc45df4",
		"f7088b4df2729683c337f9362873f5ec463105bf99940fa0429032c9691aaa10db0b3b569a491e5c2c30928648dc9f06b1d00fa937c453b215e1becb81bf2eec",

		// new vectors using the reference implementation v3:
		"fcea5d73ffdcbbade9528e0ce66febc9883b15ec3a2cd3ffba708fbda23abb840131bab2c1c22987672c7a40092bfa81b5b1ad520104ebe5aaf9dd8c7d585af3",
		"9963acc732168114b18969040322b59572791747254dfa52b903d798d7e817f073fbb9125f51e38153fe1499c613fe0b36ab1b40d0dca5bddbd326bc97c164c7",
		"78f522bb1d719898d3e0c55aa9abe4dadefc9267187b55b075f608945af4ddebf56cd6730bb168a2e10667ed73e5d016594c1c0a389f80cc93b915e5ce3d0bf6",
		"a654c4594ebd329eb4e740460c3138f030eff6a23d51b0722488cc4cae1a484d1bd6155f5839f18de9a245ea10c758afc5ded3a245725b775978ee97d18725e6"
	};
	
	// Dragonfly:
	static final int [] LambdaFull = {2,2,2,2,2,2,2,2};
	static final int [] GarlicFull = {1, 10, 10, 10, 10, 10, 10, 10};
	static final byte [][] AssociatedDataFull = {null, null, "data".getBytes(), null, 
		"dataDatadataDatadataDatadataDatadataD".getBytes(), "data".getBytes(), "data".getBytes(), "data".getBytes()}; 
	static final String[] PasswordFull = {"password", "password", "password", "passwordPASSWORDpassword", 
		"passwordPASSWORDpasswordp",
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpassword", 
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswor", 
		"passwordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordPASSWORDpasswordP"
	};
	static final String[] SaltFull = {"salt", "salt", "salt", "saltSALTsaltSALTsaltSALTsaltSALTsalt", 
		"saltSALTsaltSALTsaltSALTsaltSALTsalts", "salt", "salt", "salt"
	};
	static final String OutputFull[] =  {
		// test vector from paper: 
		"525df8b26354dc7aabdc27cfb5ee3df03c25b2153df3782e3a70ee419bf9fd0d2d8ca61e41fa506aef3cdb2c3345a22564fafef32a8efc1e5aba216c546c8578",
		"e43bda5d010ad2d10e4d5acfd78731574a6ff2b4a3fdb411ba6ffe356a44030507fd4590c988b9e27e9a45ffadc0dcc804fd14c17d05b0f100a5eb4e1cd720f1",
		// test vector from paper - but with associated data "data": 
		"cef7f09c6c84b80f54a7a06bf3939e61fe56864097bd28aa3a0bcf5871f1df05f3110c2b46afd1584973156b03dc249fa5825e991b81c5ff983f124ed92b65e3",
		"cb08272ec4f98599315152004e79e3a64ceca81c8c072a81c53da53973f545bee80e65413f8c5acc09e844611e8a89458e3252fd7820d559ec1c1710a0ff8f02",
		"d13273430743d121c7cb62ecc4fc484f9ff774ce3b039d2cf64231bc22c254c965456fc319a59cffad718ebec03949ef32177f7969c8cbeb356e037c817a2a13",
		"eb17f4973ba56a0955b3782d51f5635bb6f1f59b69b9bbaa8bf9a3dc1c0b21be80502e9c594a18f670a51af748ea3e45882ef534bdcb89a74a1d7edab4d6334b",
		"bf1823ab6fbc1bf8d8923db9847057d9f7a35d41ddb5c7b11ca49b84cf16b1801b01aaedd4b40b67777f2dfa1473ce80ec86dcf694ae0cb58503c9a39c06c12a",
		"473126aefc9e84cfec974293b20d78ae695f16840822061417c7c8e35d9425d61d483e0016e3a4e4446f2f91b69f4a9257da934335f570ad31865f9ac39c5d13"
		};

	static final String OutputKeyed[] =  {
	//lambda 2, Garlic 1, "password", "salt", null, UUID = -1L, Key = 00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF, FAST
	"11262053C84E71ED1E1FDDB5166CDAB2942999B141120170B8CF84D48CDA41983FC9BC32188B68B30AFC2236007ABBEE8D5198370BAA5433BF84E1971FBC3070",
	//lambda 2, Garlic 10, "password", "salt", "data, UUID = -1L, Key = 00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF, FAST
	"32CF479633613560EF498DD45D469A525108AD0A2F3B7A4FA37F5C1A48E65ABCBD5A2484CFA5257B6DC3373F032223C5A703457E0E8C6AEECB1A9515F278A069",
	//lambda 2, Garlic 1, "password", "salt", null, UUID = -1L, Key = 00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF, FULL
	"65305B9ABFDED690198E0E17C2BB573A69F97152B1E21CB11DB3427DCACD1E9861A06523800D07D1B9F456952E2E5DE2B2776111564CA29F891C4BC85E963912",
	//lambda 2, Garlic 10, "password", "salt", "data", UUID = -1L, Key = 00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF, FULL
	"6BB62E4E64378AB2C7C8BFF16CD5CDE8059CFFEE60E68AC779662B006FF767E37031AFCC24EEAA0F365C32476D14A8902F04034AC42F90B5B70385CF6697987E"
	};
	
	// Computed by reference implementation v3 for key derivation function
	// "password", "salt", "data", lambda 2, garlic 10
	static final String [] catenaKG = {
		"4acbc7acc1da446f41abb2ecb807494b208ddeef59086a18ea7b1a3de6d91adf5c665e3116e9de5d3cda62e88454a72c9dbd68647c5582986d81943c54525d17b66d5167ad037b4552611d0fe25afde133af644312ae9e37456eed9ee27c063e8c2fc197eb5e5cfbf4a50691a5c0b5ecba3c4b2b094134e70096ac1e245f33fb2a",
		"f5a3365a1547dc6b589d93317123c4cf1729b28963e75239d5befde670ae03a18d80a09cf97d5f23a3009b816e263b31a8cf997870ad60f8188c46e63766c081bc4354a270f8e3815c16fb3ec3995345d610c6a03a20d01c2f147bf208d4528e9d8270cd55babf36c2b5fd2bb99656e1861015a5f63579d55715f0bd239617b1",
		"a33479136d0e37679ae5bf39adb281acd841551e5b26fc1ecf1fd82e3fabdf9677b295d8763827f91e391606849bcc7c8c4cff6a3e5d326b901e87239466e0694e4cf7b8e027d5213a2a0f09990474d953402307d1156d8d20d7288feeb5356da5e1619c302c6385bed46b93d16a63acf38cd0959d8f0f2f8fc00ed9751ea4"};



	// test vectors produced from reference implementation v3
	private final static String[] phcTestVectors = {	
	"bf866dd7833d286e2e80cd5454c3ec0c95304bd1fb5a5b7a1a5f805c54a9d052",
	"31f0d95147d3f562ae6d23506adf679fd499dadf12b6ca1c2a21e22098d27eb5",
	"0107f84cd1261b5ea9d39a2da6ca5701c06759fec0e30f9d91c94415a768c2e4",
	"099a0dad972929752c3a02467630502e646daecdfc0f622f0aa7dd98bf820be0",
	"8aa0fff2a6d009af092fde858ff4f2e64121ca06cbe9e37527e717563e3baee5",
	"04352423830265e38b59fb433ac145edfa78dbe862fda5c14cb7fbb30783ed66",
	"5ecdec6ebe17f19c46afd89a8d1bbf4eb52ea47967e9b412ad9861a2cb6cbc9b",
	"3ed1f49429df828ad341c35c4d60089bb883e754f8e7d057d603b6d7d0ad5272",
	"3e05795cb0594556f18fbc950880488a329b930c2eb955eb6651971f5e0fb3d5",
	"eabec68aa34f18ded8e172edddeb2025fae8ecb3833915a249d9b0a2ed14ea88",
	"ebf5b144d22f865a9baffccc17c857b59d3141879e03ab74bf133c5754ce5f5c",
	"2a3810e52ef089b1e466f86919eea1c4f7a977bbfec5aed004ea5c03cf4d5f4e",
	"6eba0421ef7eb9fb897614e0cb25dc3255afa3cb3d10529088c21890a2c46648",
	"a7b600a89e16bdca66392a31bcd63132e264431689f54ba2d2a1511ce0c9d819",
	"59f4d361f0756a22118deec57bc95c31feca938e779546cc98a30fcdd48281db",
	"171519ed343482f151b594c40addd57ae7020beff9cf40fb5940f30f690c0165",
	"70d344808679c00e0389b3e40762a02efae2f7e0ad5c090c254dc3a201e3134d",
	"5d1f8e52b81395a71733b9fc39df0911985b69868477ca8d3757eba404820877",
	"128bf1f32191ddbe3a089534428be97720036525f68436a051810ee84de59ff3",
	"6ece03129fb63f1005883a870261dd47b3fb1084aa4b915eb868fd6d01995dc3",
	"92e39c27d886a6cbe9c0a1a6972457cb73cbd448db4e3d73e10b3230119ec309",
	"709a13dbb0152fc705deb8bd5aaa3df6cd5d8efd570951a8beb094ee38106303",
	"d71f1a1cca0f20ad7af1a3f36b83a243cb80ac82610198a6e9347b6d8bb3593f",
	"0b4855f6ff49a47ed2c4deb4356b5d7a3a5ca7f28959e2ed2f6b9b78346a3ffc",
	"a5539574f9c710438950166f874176d3570461103b8a5bb9d54c4199ac31302c",
	"7806eb970561f3a2bbc08f3af9dae53d353f15a051b8a6d9013eb22c7c35b64a",
	"d1c59fd0fefcaa52322befe63331628fb562e41e0063fd350cee5860b1fb3155",
	"d3962c95d203c3adc12a2b3b66419865309f5ca9d802012456d9f5b2dba420ec",
	"70c2c69074585658aabef980f5bb45f0769eef62c370f9f33bd813ff3f808047",
	"829ef8a51e8a4a157145bbe5c5360d2bec82dcdd9f0f075bedd64a812df60c0d",
	"f04818ef4f628daf160cac9954e7b57fcb178817729442f42efa0d9a374d022c",
	"ab30c9694a73e1d4cba935546b72ab8aa7fed510493b3e575f4a789450cc17bd",
	"4df14201bf317bc011aea67cbbc437b5421e9295cb6a413707a19d1c149be7f9",
	"dd641fb85de5f98eb4bb2f4089ef1ed0b9db77c32195dfe6fa7f752d4d659f32",
	"2ececcc49e3e77fd70dda29e68eaaae6d6f12ae287ddfb3098a2e7c8c4f51c45",
	"3ed0a42b84eb30733af271fbfe9b1403b583e8993632118510226cd4045abb1d",
	"25ed3a4cce91f87a5b9cc3e334596c62fce0a624704171bfdc3f1200cbc88cfa",
	"19f55207c8c1e9cb06af2c36f969d591eec2f2fc26e28751f868db59e8b602fe",
	"4d9bb6f11864e800c4a03edaefcb09db90438d277dda8a908ea1aefc9834518a",
	"f3a507a66602180a89fbc25bdb0a9392b3ca089193b3824afabecc26a129d044",
	"1a794f2018046226569170d522986913e96da1c27fdbf443a9beb3cf8c8ece96",
	"e8f6534261a284464d1feba61d7d7a76d51a8cfaacc94f189037ee04056c17d6",
	"5d64de59f3a9a819196419a6390c46587b0c0fc5a3176f20f193d8cfa3dc9243",
	"928ce1b7e404379f4f5cd5b728ea1f3844bde53c32683b136de1ff4202ede2ce",
	"76049eab22012aa50ec8cbd13586adc85249ed5b898592ac5d2a846e5b2b08c6",
	"ab2da3e32eff53757ac8964dc9e5a6424746c6e75ce6bcd9a3e6f12c8321d58c",
	"bf1312db9d44dc9d60c44941169e95b2b83a0b2996b43cd29f5fbbb1ed6568cb",
	"a1976210d0535ca75ef55c0003114e57e1f79b77bc8f9a0913e3090cc2821d60",
	"ab384fefd7463d24b8eb6d50cd681ebc01476dff0c296add266dc20ba1671fee",
	"87b872f767d4a152dba0d6bf7e9fc570005ada0bbf55512ad3759c4299cb3d90",
	"019ee99334798d1b9ae21a2c6d6b83a238a8857e6b0315850541879732337ad0",
	"71f2c54d65d2fd24e0e6767a29639dc140aedd117ab6d1a26d6fbf64b9493b49",
	"0fc20ad99c6d97b1ad29d13181fee63ac681f08a9737e4134de913374b0b8553",
	"9cc16181847c685b93bea799adc7d5c904a4cc1994f0cebdfa70a7509b73e464",
	"ceb2cfb3c3e1b3ee53f813db27dc3f1a47192a6a1d3a7f4e9dcc3d4b5a45cc89",
	"167b314d0db8f34f44769d97722cb80ee997cb8ddb772431b13231acbf9ab975",
	"2576dc83ceaa0de19c40d64b9c896e85a8add8a676652156d2c97af3b316360b",
	"7e6a39ee926e96406b1781ea67352f800021886f0f7efe47006c987ab215fcc5",
	"822aee23de7ea35751415d8a6d85ba453ae3b4eed47716b0bb22d69accb7a30c",
	"840e8de49bdfde28ffde70db9b444a27227343acf4bcfa02900f42c83cb0e2a6",
	"277ad4cccf672f09af58b13b93482d629ba3f6e3c557ef851836231e79871a39",
	"29e16653def0748427e5f98ecfa49760c18e783e54a0aefd0ec85f831fd57295",
	"ba1b479f77e54c29c8a445a22d7192b49656f52ab705add5dbd5593e526838ff",
	"989c754aeae0964073ad791ecfb0a4ae66c212c4dfc8a5ca0c4f0a5c083e6dfe",
	"aceabbf7edeac2d048c039ff5da72e5ad005c82dde87d2bcc8504ed8cbbd78fe",
	"f28a2cc2e37a085cd08b5c3754ee6fcaa85ea41b4d5a797c62176ce3cafc9510",
	"ee79b4167c11438b7cea99f630354a6e6334c1b948921fd6e9257887d1ea9306",
	"8434c195a5fe142a751b6170349a489753ccbaa5271c1a6d095e37b9db0e0278",
	"415b3534521e255826d2bc4926029374a7abaf4c709a207a5e16e0af5333891f",
	"6e80f1bcb2912c4690f0a9bc2a35694feeb9e6b4de0ae1a2d53d047c92923376",
	"508608c50daa3ed3f8de1b4144b2b751c49b44181ab3a04a018e5c88105887b7",
	"7663de39c06b9cf315e90300d3da5d780f0345855642e32966427feac42a2db8",
	"2d485a1bbb50c219f876d660f324e7911b9c83a0264411c5013d5c481c6d5856",
	"05120861e54415957cef1952e7192044d60691489310a5bd782033e9e4254ddf",
	"aec9f9e92732245ed7133f5a8731a9eb79bae4f07c3de0f44f37e2d743b8b8b5",
	"5c7d5c87a533220dc88ab8913bd3d9f9ef016573a21368d6909de6a9666f2216",
	"c41ed070b800754c8c185d320baed128361157f01326b4ed34779a511ea88e81",
	"643f66ac43dd8e1a9f5dc58dafb1982eff9abed63c54235d05f644ea81273631",
	"4df14d5b579e5ed7d5ba43be5907b74ac625e2c2f9caac18b9731827661a101a",
	"976ddd7041488b73e20b99043c53154641dff51284c9f253b92b50eba2cf6b09",
	"0ab72cc8fb17e6eb2db51fb12259e54be98e1f9b1ecb550090c1a86c610237c8",
	"9b65a09980831e5f5e4c0d33e4e3a8633a43d4926bd73db11ca4ece55c7d76e9",
	"769f0231ea3a4d4f61994a918892e09fd44103fa3157c88baec19f964056e5ec",
	"3396e4765739939f1d9f0d63a01196a48f60b05ba8ccc7160a039267d870e60f",
	"e708bb0e39677fd0168897f7209c20ffec15d38052dbf0d23e09b90d39011a07",
	"48ab34e9a889d134a9b59daf5a83e27355a5da47766ef76a7f6d260bd1fc8c06",
	"84bce86a80a9e8611cc328b3f39e51154edc3703da5e9ff206b90e3fbae2291c",
	"e8ab9f64ca5840aba72f31464957afb12f037e274f5ae689af592a8969958fac",
	"3fb62ee078dd8f06c5fe8a8ab31c5f38f058057d8111b43607a98f189b6ed5c6",
	"f3f80c82b79f460dc99f3588f81002cffc00ea1385f6148c9bd3b3a80f885b96",
	"3120b7df5ce6ea846c9f8135353c6e846cf8e7806a964018075a29a598b13b53",
	"90f139d78c4e2deb2cf28e733493e200cdf93d38a0869c60cb714b02fa516033",
	"c29bbba40ff6582e21fe48dc6dcad4072a199e71431e3d3366f946162e0480de",
	"159e5c18ea8617ab50269f6f90d8a7bacdf845c4add7af0bb991b1062d9805fd",
	"ac747f8c4c47623ed55c7dbbae1292fff2a23e4ef0924a9039a366fade5a676a",
	"f782b166d95ed1f34bbfa6889329116908043ff0adbee2417cd0b5ff17d8dc7f",
	"6575f0c3024cc5f404892273e7e94c60779309029bb0795f04dd85ac0029fa82",
	"967e8722d71f8c394c60e7c9fa8002e307bbb1280f6aeb5fe79ae277ef42e483",
	"ea7eeeff994fd6751622d833c1cc48035eee8df5981c7121128a369d97f2f76b",
	"0d96fc0ccd5aaa93b8124d00542fb7720d5c86a5538675bea7f7e0e430d3d351",
	"cccef006321de292739659228725530618196b4b44b31a4e4134fa057e219840",
	"ba3594e1eab1a031300942b770730d8f73d4371a0cd2fdecd7115643428bba22",
	"d0d6ac3f9e81fd39c7a3078e66eb88e73b72ef598b7e922b2d890df61e9c289b",
	"338dc84ad9e06318459bc7c886707a58a9a8dc97ba4dea5063744106b6faa2bf",
	"b6b01fd729b125680613e66088432e19b2b77550f60b68b00be50d96263c01eb",
	"303bf9bbce578b733e2324e1b934a5a7d590e60c7a54948576348eddb7d8aba8",
	"53f9e5b53005a8277f84345871ef0f8f52ce7b49fbdb3e927b9afc004141ea46",
	"7bc7d981b536ff93305b038a43743cd6bc325d75ed98e740a7444c1718957e82",
	"d6d7ce167d837dcfd83c384dec6d63b932bc9b16058984d370ce32461398d15f",
	"ba4bb3e1be33eeab7670f0e4769462deed027aa60a7cf81565d4f848e1ac7c8e",
	"20d27934bb75c1f9a9d9a2e6f465167af09fc39dd291634761ea52c12ee41691",
	"b2e263fbfa0b9c97bf9c77debbf518aa3f7bb97002dfdf1c2152b857b2af0fbd",
	"bbecc0b83d0fc3ab796c9ddc3ebe8ed3ef2ef43442419c884e57bac5678e8b97",
	"a053dddb4c15ef6309a04b46b802f25ed2c6d5a59d53d4a5c16d4251ced93652",
	"1720f6b251959d8a7088a54686c4cec81673fe24f867bd0e7575293912ee7a50",
	"c9eb0cf9e1407780a8fea728e02f0a6faf8def98cc70b60972043b098e677dab",
	"b83dc70e868f8d438e04e7f9faac9611c749f587b401cdcebd5cb56ccb19f565",
	"bb33c960c04f0fc4ee9cb1489e7181fc80bb72254dd908405e42322034ebdeb4",
	"c140dec524f23aa2ef16c3b3cd56a2b1172b51fcc0b4b9d8436b678b71a5343e",
	"a731b2a8c2bbcea56ccb6a599077ed5357951964579f47a5d33442012142b618",
	"0510766375e117eeab4f61218657ba864963891d73d6928e9e7f49d7c14bf608",
	"873872bfaa8a45bc0c8974413878764cb52e1894d076c4bbeb8da3595069462e",
	"660f6c0e8f027465bb3d9d92bdf88bc3369777691684bc4b9236ecf25f0de8cd",
	"3b7ec4c679c1637d012f16a2874d17a353118d5663dfec93a554683baab5f767",
	"4d526343ea8996b309260cbe03ec41d2316e226152a0e20f136ffa3fa35fdbb4",
	"e17c92bb89256f4058c25aca4c6fe3d5a81bf61286fc54e4f42ee6be02b4818d",
	"61ac056988be48a3f838e06e5e4f43fe1ed5cc3f2b4d1b11912b597f10417af4",
	"c8e57f935b43812c46ec40058e71a3f150835debcbb3c4944b07143ab1c4c1c1",
	"595f4abc07f4deceb704d210652e1f36defbd1885f111630061985b6c5bad731",
	"365cefc5c89101dfdac1d3ce3e9095abf598ffb92244614696fd2ecdee27c410",
	"0b94979399246679a1aefded833036328c5cdc102844210f76f5720c1140c484",
	"e5ea567c601bf746a08374398fcd14660b01055b8f794b47eca00169d0050471",
	"42b81849eb883c72d633b9fbf61ff0d18719ae771f5bc2e2c4c645f6ca647437",
	"89b348709791f093ea3ce9c75acb4184be9d1f199e79a2e1654840aaf8fe5145",
	"8ea877825c6edc3d7033b923a109f01af5a5459d8be85aba2431a243f27f6024",
	"b3efa5f99624b2e985098c183869e1ad962bba8bfefcda1d3b357610ae6694a2",
	"291e11d1c1927df64db995b2974954a348df04afd26807063f70232c524306bc",
	"00e4851695f87b7ca3cf3a6f3d5b1f8a9aa9703cd8e3616033e8decb6b79c42a",
	"acda465d63c9e4325b27a711e80ceb3493ede42c389409abd80676701b724998",
	"331deefa4f8ee37b9265d6d446d269c1b0c54797d241e9a19cb128fcf7b7288b",
	"7dc527ac65af0ab3c8747d3f401ca75d0cf129a691e7266db5f687aa4d473eff",
	"410c7f8265bb10f3dc3195f3120a0600eb307fd2b6db6dda0b6c4318e6525d3c",
	"44a8b72c3310bfd577fe96a1f26895bee91bf7ab42b88bafd6da7b1d179d557b",
	"96d41e0365e29c9917d61813de679d1f05fa5bf40051c2c19057f7a9089b0ea1",
	"206935d0f44f1f012711cf4daff12587511eb60e592837f7a8162c6f1daca28c",
	"073b19fa0b0879025e493505c053150308c278c3fcb505026bd7efbcfbafcad0",
	"00c376144f09617f34dae6ef0b07c951535aa511a2a0f13a394f9173cdf9b2e0",
	"e293031b154a79477cd1bfc8fcad289246cf6774d4251040d7d7b6fb4eb17a27",
	"10552fcdf0ffb0a3bb4a3fb0300add6d57c648a0ba54ab70d5efa2d61c310950",
	"b4061797df0dfb93fe1e45feee98f6d72549df78101bd8dbd3cafaa1c810c49b",
	"d241118f552d7dbd9c6636c1aa398a0d6b3adc95a724e14cc4764ca9d291115e",
	"d4869aaaf98738a392ba917ce09fff073543cec2021aed78d681780e523e61d4",
	"560655933917e21651608069a9ab77279b5cdb6946ec6bce5fd7901f64b6feae",
	"03b035db5952ac488e7743db6a5afc25c985ecad9f5c1f9e2ef31c6b7d02f3cf",
	"be6e5ccedbc1c27ec6ebc14acd4bb578b21de82473fb36cd7ac9275806813729",
	"1c0c77e56431881c632cb7e67627929940a9053334c390cfe0fd961e0f923315",
	"d553498ee16e87271bad6c2c8f0137738db2904d7bba651c06b9afa7acf379e9",
	"d43f57705725d8ece2efa9bfb17debff08ffa5715117f3c8ead3f92585b02aba",
	"baafb96ce0663a6bc718bf7418f2805beca58b27b63b31b17d5b1063877bdba2",
	"62f33eddfae105393b091c6e325c39bfcb22fef3f48c8080d75389511c76d709",
	"772831c747e6807e45daa9b7f545cbd07e750b19ff19e748ffb9d6e092fd0131",
	"6517fd86894ee90ded3c71a5ae907af71a5c875d0a66a6afce241d10d6255cd5",
	"04896daf952f8b092872fdd09d06b6c05a396a65d0fe7afd0a8060b928d4f55e",
	"da6d8a22308a84b77b3f15a482a5281c120bc9a3cc900e85b4481eeea780f5bc",
	"b81817fdc1bcd5a72edc19ade16c4caa133ad143ab81ba9dd40a76141e4a8c11",
	"c9c07196759d2a29db600ca85dc68ca86139ca74b31c2d95119dea9581334418",
	"bb57198d9c9799e85a19c329487798065c4013da1a5c100a4e0b4170f556a869",
	"e5c66f8c6600b99a42ae7f1f7e018742ac78b09518cffe7f85c77e9738068fa8",
	"91c0e89df815582d59ad0d41cbee421d488fda2e5fd6fcc7524ff21982a1cf95",
	"77ae1585b742578d14ecf6db0cecd10b3c8f3f1706b278fd82401eec9f3db716",
	"4d0e29a69b9a0229a8223b104d227a580ee237a5d10cfced0e509d932ca210ed",
	"89d375886da596f3d4b5e662589afe50e7f838d70bcd72da25dd2bd8a4b71a19",
	"f8e6a03433267bc4a913fd05d52c28c21e4ecb075c79a70e276d54d22e28e612",
	"fe2a149d4bc0de43ac9dbc9270971a03d7712068b12ff72d5ce6a251f280297f",
	"214ee9fb949ec5310d1d0c45afc2b5d034e75bb62724a7eb75989a5cdf74e74f",
	"9afd9c9ee09b47bf5d98d392c05803cdee790b8d297b0245e149a77f61c66249",
	"2a9ea9a8d7af4f1beab395981ca90c8f3e1625b7863520504eb26d997c5ba2c3",
	"298f32c71bef3f5172830dc2fb70d88a3131b65ff70de92ef4aa4ea5c23df09c",
	"60eca850991429aeb56032626f51c78223fef524fa713372a9c0ee442a6621ed",
	"9699c72a74263a3410c45fe1759ee80e337e6d725f9ee2d1658a2ee42b52090c",
	"deb262a26988e2bc4c2f86d38356a982358ad26ea86424b140f5581f8468ee65",
	"eb445f6c1a67b2302d723d4210bbb003afb1bc7667eca149356bec776320545e",
	"b6b80a5390f8ac41018e3a47e568dd5fa091dbb42e22ab135802e09981cbe5d3",
	"dd2be4af7f47c7be37ccb67b0724f58b062e303832311eeaf5e1412cd1ead5b5",
	"ff8d19a658d8c326d56f29f5a6b7ea5a8e18d97eb041fe4dbd6812a418af647c",
	"60038ca0f47a0892fad28fb72fb491d40de04243905920bf482b023f74750d66",
	"cd698fe0df4380464a62436b5665eb3754992440fe3f5400e8c80c5ec6ff9661",
	"075d7eda4112eb0a48932449a7bacdd74434238a7dd9b45481f4bb09022ea9c3",
	"c8590127561a9be15a45511c90db8f51c9394a785d2fd2a6426d3d7a4b1bb6f3",
	"eb9c5e5ca7de2e89169b467c1b5517e701b273cdda9938f7f253888e178dd5d0",
	"ed397fab3a16ce8a62821bc8107424c6ba242039637cfb4f3fd5b5cff96bffe2",
	"79471fd27017acfeba026386058b16dbe43b0c557424440910945b4e423ec587",
	"82d0a7ab468205529bb8682c4c5b5a66f943f3d4684b6b67294bb0ea6cb8217b",
	"9e653483c8c8f843492c4c50292de2f80f0322c7e3f9d605b479e2b0b9737cec",
	"f93e69cae92a295c97ed20a30059cc6ab20e00ea68643e7961d095231ebc5d88",
	"a0c02c239a72d6e6ab832f763979212c00d24ac77d9d51e940b46f29a1c1bf30",
	"43845d2e86470900bd9a7187c874a503049881989b34f894aa354e1132216c65",
	"6702c23a5a945387d5481732d343e36edceca73b81617ddadb0b3691826e2169",
	"c9c6bc99ed3b3f8e8c5a0dab2b23dd247efd2a2de0e539dea2ce52df3fa9659b",
	"dcf9df70ffeee14de4824e9567015341a23c7c54973fbcf2b156ed3a3e3e4a55",
	"7da1091048b962d3dfb72e441ad1bf39a354cb84a16bb5d96f38cade7cda107e",
	"dff8c9a986e51391929bda9947d4bf37d7b2852465f5f76df7bf17747aea4935",
	"16cd57c59ae18f6faf25a834b9821de37fc44e70a2c08bcc01757278903a360a",
	"fcb40650645c70d2527d52d3ea19580222adcfb711be507032890691d2c8a950",
	"84a09326433af5b95d563b5bf9d97fad3909b9f399fa0c31e1e85a90f58f844d",
	"4e08732b31cdf5d7c45f4812b528b08977d0573f149f1644a355e576dc013da3",
	"0bc4b65c12fc9ecc957d51c1cd395edd3584fd3cfaa6afa86741bdae408cfea9",
	"f0922ed8b30c07df98f2eb056edabb6a54ceb87db476cedfcbbe24dd6842d4bc",
	"9738cff1de0f95040efe1f4ac97833a780741950cf145459f2fe6352596db0d2",
	"3a452034b0a77008448aa91ddf26761565b3a70a8a41b2ba470b703826e06861",
	"289a8320c65d2ba28825eb280725164167310f2e49e3679977891535c6cf24eb",
	"53b50b6c9a8389d96f79fcce8401d5bd18637a67b49e409ad14c9a0a04bcf83e",
	"3845ed044cf006f0e4a1311e5945c2614ea2984ce240ae463bf5ee0aa94f9321",
	"176bce7802c134d566dda8d7184f09b70905255fe04c2b32ad39099d22045f46",
	"436875467e0250a42aef3c7df1f0e6a8fb8dfb6efb7cdc9d0bde63c93539d5d3",
	"2468a52220c78f17173ab4b7169e668805c43bc46dbc1b21e6408f50c49c9509",
	"901921957296f4176ec23b276892cc453e946c1cf1d787880a7a09c4d2772323",
	"bbf870777d6e7a07416d187ba850894991373be78e2861e67c4ffd2d17b9609f",
	"7fc8b7f8cc5a317f2f80e0b6ed50c2d9113a242e94aec75dc59434fc6fa4feaa",
	"809221d84b948e27ec8f09ac436daf4ddeb0fbfd39ff318d47462ecd24937729",
	"146373d51658b3eb42088f4082206defa1c187541d7a57b37642d58b0df14260",
	"ed8ef5531068350ef4690cde2cdeedfb89bc1aec9fb788bb242d0010d7d29cd8",
	"d8e730a089ceaef4f386acf821de1a50c38a088410c3375e8fb84a1909715bfb",
	"d6ceca594304aabea2b37188baae011336b5ae66bffc442e6272373b4ec4a896",
	"141841fd2db41a1e656a6c1272d0b8e99f612cd2423cddc2e984bd35de4bf3fd",
	"d6ad68c7bc412c4d54e7374b5e70cb78c968a395a2bde3d449281b8d46f92f6f",
	"20036ff6c61b97370023c1e7bcd3272c3d69816c8a05568822b8074482700d52",
	"261491f3362f13b3cbc6eebf438a3cfcfa399f04230fc12c3b2f34a5a9fd2ad1",
	"b00e33245830fd4cbb115c3a8f3b4160a0ac6d287a3eaed21af9a77e53b67d46",
	"899566084a2540410b7f1f99486271981453dfe6d2f45c750b30fe55a15cbc9f",
	"91260684a245fba1c04835bd6e57f65caac71c15807290e989c0fc3a061b02c3",
	"76ab9daa8619b0c82554d8ed0810a8cdd9056866c8b3d4b4300ee8ba4d08609c",
	"2e20b6e51f1cd555a5230d137f84e54e0bdf6c41c65538d0a9c1318a68466b8d",
	"046ac3f18a9df08d60c59314410ed60cf5c2c04f1f73a6a3a280ccf8e4e559c2",
	"6ecf91d844df770b807526a65f87f13cf6fdc0faf3687bea0069e40bb46731a5",
	"b78d172dfcf7d7113f0212ed885310224c93578d1f1e4f914aa8ebbb80808714",
	"235fdbdc3c5a490d5ba8331c66d6582ddb88f6aa8a23d8664f404396f5f72777",
	"28331326433c7d9a782eb1bc6ccd5ebcae4b1bb92d8eb9130adffe983cc561b9",
	"cddd1fdaabe159b1e8b195afb8836f822773b1680a35d5b232e12167b33ea70e",
	"9b7956cb364e9272be7fb4de9045abf4fc6a6a40cbdaf03917ccb0407761e3bd",
	"932be1700c43d97027640970858434508ae2e71f6438550fb21374a68dcd87e2",
	"7ca98693436da275932b1bf01af1821b3dcf4ee1e58994e62be5bdfa5074647a",
	"04fd805bc4bfef668eef97a43f8804da5e8e6211f12e944fae2cdb03548f7cb8",
	"5be012d7800af3c629559f5ddfeb3486a3d6ca4af969f97445055d55fa4af21f",
	"ee5c90acc9c60d4e03ccb113a06a307ba63c1c835cadd80a9b1b3e04991612f1",
	"4089dcd795ac7795fa4c3d2cd99d9e120e5bb7c80edb1ef625d7da7eac0fe35f",
	"5c7b34591db76000ae62d7524570e7bc814ef07a874aa4f320c83901e6abb48b",
	"3b43dd47a47a8169a4b94d1b6e86736475838bc6a6606b25f1a44cb163f0b732",
	"24c146e9388354b143283db8dd0c4883730d445c75d9e9974dcc85543aaf1678",
	"52a5fb3eb784a601691456a2fe0d4181dc87511f0f3a4fddb537f220066b8f6e",
	"50bc6ddc384cc78f3dd793efd3ce60b800624149f1fd4eea33f2fc5534ba4557",
	"15d9db4554b7468a99af2d68a47ee47d2554acf236e002eb2a8b1aa9d016222f",
	"f004a134343b0a98a96fe232e723861cdfdbb73b6de1e8ff9803cc7a61b369d0",
	"f41b6a5267f2e226abea528ee910204d563a430098bf4b7aa794b581f38f5b6e",
	"6fa5efccaabccd5a69e0e4969982e7fa12eee0766cc9b7b5cc922d3cbd9c9adf",
	"f0860967575cc1a45d87e9d51ec77e6f1596cbadaebd74d645a4e0722a8690e6",
	"bf866dd7833d286e2e80cd5454c3ec0c95304bd1fb5a5b7a1a5f805c54a9d052",
	"171211f15142af7acc437c75a6e85a7950ab5506635cf0c34bf32002bb7778df",
	"afb12f5d9e383f5ccff1904086e5a9dd773564005f7e6bd0a9c3c598e8eb36c6",
	"44b4c5fd42b8f8bb8705a07e9462d9846526901470b3c61663ca0f889f2d40b0",
	"0012a89bcff93569333f8213bec783d1d8ada8aafd7d80b7c24768a2fb1358c9",
	"80aa7dd2a9d123d887a60e2d5a809fa2c3a27b42c7edcbd3fe505a29aba0ff5a",
	"f6c967ce61cf51ec7bc5ccf5bdc4c9397b40c1460734d6e3c5103c3f9ca6e8a8",
	"36f90ec96af7a02dff497d86068a8c7f93ea6f420f5a3e9e78ed61d37225ae79",
	"ea86f7faa7da8d516a64daaf59cb92613249f576424046f2621c2a9b6b60196b",
	"d83d5ce7f76cc306a3cdae6c1fbfa1c9ab0ef674913fcaa31bc842bf7cd57463",
	"23fc582085b009f6c2366874da16315279a40d25e064b4f4a95a9d17bc0b2b93",
	"440bd0c0d15ddc192dec91e745fd1809e7d214c4ce6e8eb413eccf62df00fd80",
	"045450470655a8283633a06020b914f77b9c76bd0f6d9b091c47e4abfa7e4745",
	"04facef69848fedf8377347c65849291eb59f014a0bbfb524d11efd980702f05",
	"e22a72dfe5ae4925557a336365d035772e0320416beb597bedaac57e92a83200",
	"453a7d420595e3a51fb734d0e6d260bcc407eb7eecabf550960be3a99fe5b17d",
	"d6c44ea7a7fba9f23bcae9db88fffe5ac654b95f766df95b53889056fd6de08a",
	"8c7737126768fc54aa8dd0bab382ddbd4978fc5a510cebad0e9aff05147f6aca",
	"cc79130a246c24ce266955d3990a0bf527f3af868c57076cc67ca6a60eea8c19",
	"4220fa346daf8f0219f234008509ee638ff8877779a24393642eb2da97b44fa2",
	"d7449c456018b9d1ecc41f812365dc370948a6f7214249fcca88a7d85082db23",
	"f8cd84ef22920136c242c2a0eb0f08505e629a69ef37d2d704f637b5357f8b15",
	"2e0e1a7097fd5b5153fcf0306aefe7a65895f6d604dc1863286852c9bdb3ee82",
	"cc60af3a24d3dcab0bafe650502537b466b8e19346ec0bf1f570be89be732e47",
	"d0cd39103b453e8dd4323ca25a3371e6972423ccc91e591f2047dadfe0c27953",
	"3767e4e3feeed448d2b38896a6ca6a22402b89f7ef69a6f14e0382f2ee908da8",
	"48b90adee224bee2b4ebf1441fd018923b5869d3bd6b7da741c792ab54cae710",
	"8e6f73503f8d2cee79fae97d6ab70b822289a6f4e468d6690025ecd821a126dc",
	"9edd1e68b9d26334bc3dcc00b6b833f740207cbed60bd1e6b8dee44cd10ebbb5",
	"f983ae6ea4ab33dbcb87c38f30142604ddb227c08610f8d1c4a071234736cbb4",
	"6adcd04eaee7c1942bf24c9ab1c327886c2642ca8ec0efe4aa770ec9e6abe5ed",
	"45ea1fb284fa75acecab2d28d3681e9aaf6754f054fea441b76c05d134f930db",
	"50fed6b91f645c9935d3c377ac13165280f8cc1548883e42230a98adca0af8a8",
	"25f4b0824694b891e0b132a0bb837291685cfba3bfdf269691fa6356c9d6ff50",
	"37c56b1924f9dd6fc3f5f5ea58581f00fcb744275ee451da240036016e04d3d1",
	"f80acc50e1ee8384bb43a466ff997aae6a1b99199f5d83d11e2caa00169af8c9",
	"066bfaf1d28e42d3b8c1162055b8130a38b3e57c53a0ce3f3d50bd6e1c5bb728",
	"413742b164a121249705cb7f338bb263372191d0ec24bd931299a0dd1bdbb80b",
	"5f64633c19372044885a8d7ad0078be10efea2eedb686103b26a600fef18d1a2",
	"b868042d8cf8d89e438600ed0518c4e96e8c02079be9851ea0f7bd24aa627e21",
	"67b18637578d5c9a71aa85e2c2c738cec43a3938645c86c21a0b72c352159903",
	"e8759ba6b216a2eaaf1565fba7a32505947870bdbdc4080f9b7189c51c7297b4",
	"00f4681748bd7946fdaf53c515f3d561cf0fe4136b1c8d50ba722df13ddbbecd",
	"24d06260f650623ec1a5406fcaea4c73a2c35bae4eacdc5cde77bff178d96a3b",
	"d369f986a9cd6764773f5d6e8eb751cc96af86abb05005370fe4e5a779729d26",
	"aa9ec514ec8851129640f18c13895facaf3641d0f6587d4efaebfb60a4172153",
	"e9532a6d33c2f3a5fa92a4a88739835b4984526c66f5de66469057c65b24ba0e",
	"3a49354c5eb13e27f4608279720cd7fe06af874603a8dfe09523f31ef274e673",
	"32b69bf7b3777b0cdc1d3e79bd4c231c570475e9de4d442b2b7cb3278fd5dd0c",
	"e57223fe62d1e022a214d379d2fc8dbb6a451c57ee53235b19d8561bd96aadce",
	"faccd5c8245b7f5fd25b2a3ce77261ca8c3cd9d4430a9cdcc65295e53282702f",
	"76a67b70dbbbdde09531ccafd2edfffd344be58d90c2a0a736499382e85cdfa7",
	"606a3e08815756815065d065ebb89ca9f213856151d97d7ddaef55de61f70fb4",
	"a43952ab7e8725632da68c21b6d8c5a72eac803978311cc55a7a9bf6ba5d32fb",
	"19e139d052fff7fa04f27a4bfa96f98f330f53ea1c4c14ac02c8f332a8767a98",
	"6126ab48c6b209aea1c431d50d1465281470d86e2f704396aedbf57d9b247035",
	"9b69d0d7a9b36027e5030a9213b92623075b13c8c616b991206d4984f63cfac7",
	"550d3a853a6ed423ce138049358692b99b095ba1d7303c02afd2523c98746010",
	"496f6bad35977b4a405182c0f807f2237a127de8c1a0ea21c3b356f1f070c948",
	"3b7dc7e017002b0ba26ba978a6b02f301888f61c795c5041d68e6aae1ce2a1d0",
	"b5dff89839840eca84af2039ad559046bb01fc11535311a887ad75052352ba95",
	"6014187a19e7657f270e18c89e3da2244169debbf6ad7b8aba09d3be5d65afe2",
	"4ae906c157f9370956a83686d7ff53b82ff95e5f9bf54f169aad953ab83539c0",
	"0e89ea085e48d8b106b56604a5edaee3e60476ea36cd7a2a08d41ee37453bf70",
	"df811984632d5bcde1b6b761b1cd9494ba66fa74b17d910876244ecf6324bfba",
	"f3054a2bf43d309fdf666f5727ee5f40054d76b0937a3ab879ec3bf70765409d",
	"1806b0d426690a258822a6f3e4c51c2f9531aa28bb9752e99a941d1a1ed86a72",
	"2115cae81faa00c00331cb6b7265f121366102d7ca1909b40f11c5e30f888fbe",
	"577bc31c6eb02717d60ff7a1c3a1bf9a16a54b81f8e23dbe2e29c410543540e3",
	"9f89695c03035e9e2e9cf34c4039932c29240b76d5805d3433c322d7d37cc7c1",
	"5c7007f141b5a1d18a4b35c4a67de9dc8c659d5e52c78cd4b88b9fefb5fa9072",
	"39b7a037ce2c50fb342d4acd47c07e256dd59880b37c913c748e7516b41e6139",
	"499bf160b52118288c423fb0eadbf310d68082ef6fdcc724b8b625a4ebb13445",
	"da10647492308ccc1427f00f37187ae29020598dd6e47236ae036ea3ee40f90c",
	"85c6d5b5351183e744659b5f6deefe5e9ca6bd5b00647797a46a1db04116392f",
	"43a2d192124554c4e973c36b5519ceaa6cac6af42358d552b11bbb997d95e1a0",
	"0f30d79fc365e067128572f7c44b9815eddd8550a3551fc07783cee2b181965e",
	"80f33fff9fbcc31b19aaff88623d885092cb39868d0d8e86b27a41df9059ba8b",
	"4bb91872b3fd72215fb645e1db97f26b87a7df0ce5a267944d0fb98d35f0b579",
	"e15a375f15dbdd4e3e3715cd2e43e36b17b7371012cb9acae7f87e68973141ed",
	"c870a2bb9c897c87790baec6d70f39e13de98f66312417e31c3dd650b0491b86",
	"f3156ad7c7b58fabd0878c77746c64f8e6c8c83bb6f155995bf551688f96b3c1",
	"dfcc94facc519a5b03926b06bf0f89385883d58d9df7085921f5c7edc477f2bb",
	"f037ebdf46b81b0ba700c10933b65f09552fb7e5342ddd4c143039ea73905af9",
	"c4d0f61e7593b456400cad6fcf20e623cc381e13963f060523636241ba049591",
	"b3e6d4c3f94a1a32c0821ae9539b967d4135a72f64c6a4b43107c5b3618a553e",
	"7c27130f1ed35a200327bf43afcc34ba3d35a861b6db4cb799a661ee79113263",
	"fc6406b5efc414afb865599c8480b6c6ef95d8e077ac9a3cc3730584684a8653",
	"cdb159d7bf59c2e6d01b6d48ab3a0de144884b00eb9c9803d72daa7fcc628cb5",
	"a28c50f612c320a498a7708fa3ef1bad1b0c0d70e29b2a33f08df4f294f16cee",
	"e67c3ae67cfc2ad09831758c825307b8e0d32a23f056d5dbd6f7472f58246216",
	"38f933b96d6c2e6b3250835f9e4869da5637b57658e4baeaef8f3b41b14226d4",
	"8ca60fb5a92a7c9f4b600fde1e65d7f9058ce2335e95c6aa7c31eea5a9e47708",
	"ee0acd029c1f02a08bba2c67633547da536d79e4aa36fec00061444f4b8e79a9",
	"3a7a5ad115aaad89f0043ea96bba52eb21d56c36ad3d8536473276e9a1168e38",
	"423af6b1b0d58ecc7ebccc682410558399d257754510711a89646ce51525f966",
	"62374048023b21157f17d14061e16fdde636f07981803554d28597c3160b5f86",
	"9e570ed487d67da10821e9fafcd27aeb4b0fc3f71a5040b838fdf91406e45cbf",
	"1a2f11018311f60138122b20388b95362e2d2433dba0b38327ba6413891cbd04",
	"d853c90d8bcc1bb36c7333ff1269e5cd70cacf54ce263a01601b3da96d130bc0",
	"c1d378d7922a0a815de26e084ebd5bfbcc3c97d6a797d1d1d72a0fffc944a787",
	"42133a4c5204514ea0b6b29258473c01530810024cff284ebe67c15a374f8543",
	"c7a153264ccefc74efb6fce6b264e5dd400e388a0d244384e99ad2a75ed62d8a",
	"230b19b07a83e38f90c708c620f5c230f225a5784176db60cb360fc7ebafd5e2",
	"141f64ca31fcd74a816e6dcf32dfb3c29976473b207fbc73ae0e0e6036bff398",
	"88708927296ac3531a9306b01c8e136c1f4c3e24be43909304a06d6e54b6d2a8",
	"c504a495efa84b76e013b1f435b804ee5916fb50fd0268e856e68421cdc305a0",
	"2ef60e6dd6ede41ad9f2292e4785e9cfcca5c3fae29e39ca3f5b8c869b7860e3",
	"a73e9debcf8a5c1a6c8f2c4fff3460f89e5984da5ccadb1d30d34e9b56b2d553",
	"2ad4db6ffd0ef9e242bef73cb111d63edc5a0dc0277d5d8bd30c99dd9306d4a9",
	"388b1aa6e7b1ec6907245338b67c2023922619650d98e6b221737599dcced263",
	"c3fd722e552c8794618989afcc4a7510abc44b6d0304c0faa1e9691b614da057",
	"4ca6d031435555f4522d875b905c0634e538ed1227b80eb5b2f85b6b7a8ee1ce",
	"011e4d48ed12b38d51bff2c4a42aebbe8131b00cf31d2b85fb66018a05b87597",
	"9f27ea80c893c764981e7729b85e9472cbb9e3132b83192f83919469d962b73f",
	"05e8ecbbcde828432667a44bddd83f23a13e06e32e09398d06d342cbb7d77d69",
	"aae6c1f7714a049110b7d7b3145bdab6cf0f0b739344d751767ae5231dbd59ce",
	"dc5c93157400605aa541ef05692f9af4f67bae69e8d0b8d5363ec817c3f5fd56",
	"a768a8adebb8c4757a89eb4b5c264b7e5a42c74f28a6eb0fb6c3891bb2f5f946",
	"a7dfd47291d0f2b483194fb3efc48bec31b98143ac7e3954ec5d890ee90b525d",
	"31732aa0d00c7882b85953d1d862354569433b48a6a52078094f88c6a0721b3a",
	"9fc2a2c461db86f0dd7eac1c8e7f9bd652923d0ec298dbf6393ffe639d3c29b7",
	"6995828c5cff521b014d624fc2ad392bfbbc82c7160064fb82d636d1c13f4011",
	"092893ead97059f58371afcb189c17918d6811cf3ebebc606baf264ea3df2ec9",
	"45c531249bac54cd1ef741ed0ba25ba679b8e7945f47a6035d5beff9a2cfd29b",
	"7c159877925ea36ee8bdde85b082bbc3db58cb4b8c5a575e81673586a12c66d1",
	"e73ee88d6f691922c046c6309f79246021c9debd077096e951001e174bdc3218",
	"1463635f1ee92af1877fccaa21d2fc1afdfe51d5a26728bf88f6535f12cae466",
	"ac8390303109417ff8f505615d92ee21d14417d9572af4d57374fed8d7e57621",
	"310ac63539726d40909960bb590be74fed591d544f81d6da8508b54c6b0b38d7",
	"7128d1deb9c4e7b0f36e0e4127af4d85f0913d8f32620f23a29dd2a786fe1c20",
	"1e6879c4a564f0ce67da54dad8ab2713fc49464467ceed7c37833c5a9e73dead",
	"c4d6b304a6d06c4ee791b8fcef24f9bcbae5c4b22b1751c25c5fc2e8ea45bfb6",
	"ff3292728204e70396d70910bfac91ca84117063ec5bfac763dad5bbcf6e4c93",
	"303bc79a4dba59b99223883b7ca6a6230119b211e572b58d4307362967bea4f8",
	"cb4433d0e3150905bbb05429be31a42969a92af36f77e21e36ec16a987d60f09",
	"20a3dc358ee12fb6bf56c68eac66fb2053d90fd3727ace4197fb3948880832b9",
	"bf16cd764438aff258ab74b7a4f9fd3e9539bc6e64b80ab8ec84e4f5b0ae1649",
	"d46e7f40cbbced7e2e5e3716ec170a7b8a06bfb241b221713a00c053807e4672",
	"5bf553bae508cf7d57ebe97a6720a2c6e9f8d324eeae5dd2e757298cb808644a",
	"6cd6664951770e0bf6d8c772f1ad6f6d82817b0ba39cdfbe05d671c5f207f6c0",
	"ffe2172fbc025606e3172b7dbdc08d6f54976ba1f3a877a270cbec3c855f0403",
	"c195c0c73ac19a47bd59fff284e634fa074fe7de55273a29c15163db149fdc16",
	"454c0a08414f4056c8d4cd7fc8a30c8710f76da7ff48d9282e92d8df3019b002",
	"1fee661ae00b52f91e871de54a9fb38cf23b4273a556394994b918f95360416e",
	"6f4638f8f4dc5b3c4cedb149f9fd2b2c107ecc50008e3395f0924b81f3a36954",
	"0a9235f3e66d16ace6ef3f44cdf10ce418d384208c257cefb52988ad4b1d4ab6",
	"05b2d9f0e39d9d32231bbc14542ef680fa4432be3d2c8e5059e7b77a7c0775da",
	"aacb29eb9351daad40d6aa1a3d3f8562ea815aeea23b33ddfe62563bdaa7c28d",
	"494a55ccfc72465d9bea7bc92bca451681d23331e39dea0479f30b09e630a045",
	"3eb9a4cc4227ddc233754f6428cd8740e09f8ff43d75e0a0121918a6a1176640",
	"d5d1b76ddae6c4bec58303ee02c47e07f1fc13f6ed7d3ae97b85c8f868c72688",
	"fb27bfa0521c5d932b2bcc8471dee03c6c2a7b679e21650ff02ccd9ee86ad2d6",
	"c76285b5c2662acbcc80ca6bd50f925b7fac3e6be3e683c76e07ea9bdf4d6743",
	"7568a32e119dc0b59210644c0d7b2c2f1325dc40394a7451e1a58f0e82035d13",
	"84decd6070aab4626fc6ef8a492d9aefa112818f33fe4fd8a28d65e60de3e238",
	"452d756ad72b90c980871374762cd84c8854a1492b67405d0f8430e49c000f6e",
	"b536d03f5a109ff10b04440c7bd3b20f5fadb237aafaf4a5924bebb8e33e9534",
	"2759a607dfe66a3f62d381674ec8b5ae7aadf8f17676b4773190f0a173a0ef32",
	"dff82a448bcb4581b18166b012b700b873d54ce6e3b3013e2786dde188a4bef4",
	"5ad2df92a908f79e1c43f1081fbfceee50c19aaa360c68c0845c0c96044a6d7f",
	"0a0a0b8b07599d47d5612d985c3fe7667bd9acf8ea45360cfa76b3f5df38938f",
	"f152ec61871eee7bdb5a034956caccfbebe5314b99a358a804382af39d667170",
	"fbadd0756d5922c32d502a50cba915fe7de087b6a924a8003561a39f97d88f41",
	"0fa4708c177f4dba4880f497e188997dd6eae89dcfc3e84cf575bcc97fe21656",
	"914eb7cfdf4a63cf1870477d5b75447f6a839b59baf26e677bde645fb4129d3f",
	"402f7578c9d2fe67aa08c66de7ad2121c6ace2773668a6940e8a85c069f9411b",
	"be462bc281d3b8c7b95f22460780097df464673205606bf0392c91d4e593bce2",
	"5c2c77d8c8a74c0f49482cceb7a43f874a1f4ae0e93bfb9fdff388c162dbe918",
	"21ded372f210f956cdda1332ceebf141e048d2b2a719e40c4c86098cd9151b18",
	"e68df22cdc79e0c900e1cafdb8bf8fd5fdaf179ffef6f8ccd6c148d735388e37",
	"5f47058ba5de75df58770703edced8322aa99c0fb8bea8fee8b7bc375f9527f1",
	"27064c29889db15f71b4e38233ec8034e444eadde2578f6673c27125e2fc8731",
	"087b05724f446f2b3f10e93cd2eac6ce9fbcc0e388abbe08d8d11cf35cd4bcb7",
	"e96832af32f7c4ba4cbcc68e2c0e492cb20c7aa2bb5e57b5f319ce9bfd8b2aca",
	"9ae1a5fde39a754dcb2f5a91fcccd9cf5fc571e6a3db03ad3fffd5a3aa9adc03",
	"408c50b9bd29accf6ebb0d78dd422a3f1a10549ec201caf3618e463558485829",
	"78ab2ae389f56543007f2ceee9e382a18fc1a63de6faa185b6ec3c705d0ad4a5",
	"54e5bb8ac54fee29cadeab8da63cd00b1e708afb2f1cbd5113d1f7f332136cab",
	"919cc287fb2567255dfd35cefa69b7e447a3d9368dc228dfbc3f9dadc08b2038",
	"a74bcc088864e8ebcedc1d684ee1cb10d331af01b1545a38bd4871843938208c",
	"01907f82fdaa3fe2f7b52182e484cff01fb6f77aa53640a89993e84c0654d289",
	"230b9d371c41563ce52219e3c1bdded9a165e788b2c3a1cf7387edde661863ef",
	"8a81d97442c6380c454119733e7233ac64b554a435bcc0ed6dda63aeaedabd86",
	"00a02c52982c5272c0bc3a7e1588db9af172c7d1c23dea9e0dcd4437a27b8dd6",
	"2287c8a775f88183d7f6c6a164d1264aee45b84fa2ee223ca2734ad0c8ae522a",
	"2b41f1b23822286d20da529afa71a9916584f203b1a204ba0c9d9cd7253d8976",
	"968cc36b9575c7ac1e2c6eafcea8bf5ef9bfa43533b0e5d6935bd4b407d6fbc9",
	"cc416ae5655fdf50b4775bf57b3d9ae5e390308be3d627775dfef39359e22fd2",
	"d9e9524f36d0a1e7cc5e47b50bed916c9c5bc914326137edab1d60ff8922ccf6",
	"58b7b2b17b3a438e2ba58ad6f7a99b2a2e720d3232df59acf8ec237582b69c9d",
	"98cf43ab6c56facbb5d128b9f698fbe9588652f8788437fea4f985335b4a1883",
	"77c0fb95fde099f0c9762c657e87d16457f4553f7ebf6b92405e0dc4fcc12351",
	"c4f2d943f26f5b32f3a36e7359a7d46e789682bea650daf3c194727e98da76a1",
	"649a0904792b3e5cc65a4b20ef4bec58d16e8602b10c131df000c25ec9fb87b9",
	"91bed38e76fc118b047e7e188375703dc12ee354eb485a4f6a015d820dba36ca",
	"dedaa83edb57feefd9eb9b8c73ca3f9ccef321bd38fd90fb12c4f43b5753d671",
	"b2588f2b23381f2a5c1e00e3b8b5cd837a1e818b3bf0ed67034932b156d12388",
	"35c2b62a1d4075c56a9cce40dcb0f988060e1b61debdf74bf657b03b6f26f338",
	"f4a6bc20edeea018e0e2d9e4a4c50be7e7df400bd08862b6ee5b3a36099badd0",
	"4d1202298d6a4ce474bcc1c910285cdf29d8d1814e52135ec06d6872b7b84b81",
	"97065c09c1bcaea4b585b8a1df9f602f8ada2e2f664e9928e9e060ef90f258ed",
	"002a8f8db60954251ee771276901ee784184b10506e0c92a5500110463861ce6",
	"728673cb320f8f1fac8cbd676423d0faf1a95f3a5325c313bf4ca383202688ff",
	"cb0bb66f295388db908f67916547b0b599fe65a13ab2b183b4b3a6ae09b2f17d",
	"d33a932936ca91ec5dfbfdab88dc45dc10093eb9e2cbd7cd301b12e61459518b",
	"b55bb8215193bec46adf44a7f14e84d857591c82d2aa9bfc7b663d22602eeb55",
	"6a2e9f63eb3520f0ff2144704ccc42b485e28eb925454393b83d08afefac68ce",
	"181d032ec4a086d3bfcdd12d54394a12def07868bad6bb90a79528606df78647",
	"1f9d5d9ba7767faf2c095d17ea916f18a019344554b03ce8b6714c875796af03",
	"ed545e4bf3dea8955d600155a2f98739c85d850d63686921802c654b81f7281c",
	"354021d78152df766e485dad35e77e5b23c509c6e2727c1328d6f356115cfc46",
	"cc26d2542dff929588678bf33ee6b62fd93911f0ed3c025224ea12ed92bb4b36",
	"7f819a7ef5c7885bf8a155b9c4c70a8047d8ca73dbc5af9f9051460821d5eb9c",
	"cbadc1867f6075d025ffcbc906af0a65cdc1527eda9f937fe94ae807612cd9db",
	"e21c5afe552ee4f8a1902a8fcfce7306d6d1dcf88b1460dc722d708d9bb92d56",
	"5cb87e1800129e54a50c3d134ac4d131a0fae76cebb0eced473b800157ac0caa",
	"6bb1656ba9ddbb45e01db3333bbde86050e9929b00a931e9de5f974a04d2b957",
	"edcebd23e6c64dca8dd25c8d1c0fb547a37e667ab990171cfbabccfd906ee95b",
	"dd2a638fddb5c3f2bbdfc64a33617c86867ea2d5ed0c857f769d7d6101d488f8",
	"da295481610be9cee2e685e16976cf82a9bad65b49757cd06090e800d2f7a4ca",
	"64d8472cbacee6962fd6e6c0e0b769e4f69d39081a8b63b266a96af271887f26",
	"ee1bdf55b6cff0d14c228946ba14b0b3dc03f1d91a6c823d397d211d9a608138",
	"41311791e28ceac99a604f29614aaa69963e0187a6df2f3e2191e92944cb7413",
	"16184ef5d0640e3cb87b4f51f742672436aa9d7cc26a8aa5c637af294c5fc6c5",
	"6c946d8fc32c23489ac0e1ac8e5dbc8c9522971021719f3dbb5c900dbe9ac8a9",
	"6e6ce50aef3c84ab68025a4e361f353846a34a2b44924f8ca6fda98e6b6b4959",
	"30d39538d879d479b46b23af991913007d0a45149f3f57f4ad23567f9815e310",
	"55f702fbc3e1374003ecb1030a7465919d4346324204791295bfb9e82265ee7b",
	"b0a28f7a635c0aacff02fbb7e848248ab3cd962b577ecc27b16896ee0385672b",
	"cab07ecfe94d88200c59dad1ae772ba15fea14e411a6b1f7794e5cd166dd35bc",
	"54ef79e09d444b41473d6078aad1e0e5bb1ccd4c1b1872eda962c78a840ff48b",
	"a1957caf7c071d750d7c9361658fbbe8ab0595f14e47f490fe9ae7338ea96deb",
	"667d2e445e2ef1970d21e7cf8793ae9c0bcd430e2cf5911e807bbf1aea1bec88",
	"83eff437b77e0d131bb1e85d7ccd38430b61198ce95a3ce324b757c3c68532bc",
	"de544fc2055ca90604498ea73e84cf514ee50e7b34838b5179beeeb18d4beba3",
	"f12975991876c95eafe968ffc6237257c6c70964953a3b2fab442919453a2efe",
	"7821b953f6f014a5062ec82e76b676b1f974096b440fe4748bd8c211bb256634",
	"e0499d9099433768cb344453472985c66c2a89c6ec202dd7c819f1078bdd65d4",
	"ea05abc7671a901434e706222e694f64075ab2faa8ece6f97c610d39c49889f4",
	"6d671c75a59cea139f5b9bb53459d545145ea8ca62bccf14a83090b67eec72c0",
	"1749f1f1f0b4b2e0b1c435e70b1ca201cef1e96548568cc56ad57ae2e8c34102",
	"b5c3d38c4d9bc671a6fe286acc482c5a71ec72a690f86d4e6551299ad09da492",
	"198c7ddeef1b0ef6963750f8f12a4aa1e03314b12e1a1d103f559a21c00ec473",
	"dddced6ef5d37052273338db6d7021b6463618cd10fd470141bd686becb85e91",
	"8f179bc7675d305dc9824fdd58f159ddeaeb49e5449bb74c3cd0125b028fdb01",
	"919ca3eda73653cdaac7438cb0e71c56f957fd99afa243ce87284df4274f0f86",
	"06cbfa152a115ad90d8fbf062308acb16e1e25a58d68bc8627b554bd9e095c00",
	"1eeb988be921d242d67394e7ee161b199a9159de895c70351a760e572af2317b",
	"65392370b06338966b8fb9ea111b1bffc6d3bacbf083815bc5df50864ca33285",
	"fba67c1f780574e40e47f62c25cf64db7b8edabcec8eb7f28b2032d9c2dcf331",
	"27cb9f4e98b2b8ab4332141866b7affe6224ba1e9eef5fa10d579bb99f1d2de0",
	"b8f19f32a9ddad73f4f0d7fab49f6a8e4ce31e164a97df85546abd80b2f5fc63",
	"63ca79b4720388345d7a5b6998cb7fa3eadefdaf7d18ff9e5025d4565800d4ba",
	"6c45d4f87e98d75545f05af82615ecd4897a9f7e3168b6b79d69596c041ec699",
	"9e57fad6c62bf541e0fed74a079635926694264225b4a594e673782fe1ef25fd"};

	
	private final static char[] HEX_ARRAY = "0123456789ABCDEF".toCharArray();
	private static String bytes2hex(byte[] bytes) {
	    char[] hexChars = new char[bytes.length * 2];
	    for ( int j = 0; j < bytes.length; j++ ) {
	        int v = bytes[j] & 0xFF;
	        hexChars[j * 2] = HEX_ARRAY[v >>> 4];
	        hexChars[j * 2 + 1] = HEX_ARRAY[v & 0x0F];
	    }
	    return new String(hexChars);
	}
	public final static byte[] hex2bytes(String hexString) {

		byte[] byteArray = new byte[hexString.length() / 2];// 2 Character = 1 Byte
			int len = hexString.length();
			if ( (len & 1) == 1){ 
				System.err.println("Illegal Argument (Function hexStringToBytes): HexString is not even");
				return byteArray; // return null-Array
			}
			final char [] hexCharArray = hexString.toCharArray ();
			for (int i = 0; i < hexString.length(); i+=2) {
				// 1. char in hex <<4, 2. char in hex
				byteArray[i / 2] = (byte) ((Character.digit (hexCharArray[i], 16) << 4) 
								+ Character.digit (hexCharArray[i + 1], 16));
			}		
			return byteArray;
	}

	private static void PHC_test() {
		int i;
		int j = 0;
		int testVectorIndex = 0;

		CatenaBRG_v3_1 cat = new CatenaBRG_v3_1(true);
		byte[] pwd = new byte[1];
		byte[] salt = new byte[1];

		for(i=0; i< 256; i++) {

			byte[] hash = new byte[32];
			pwd[0] = (byte) i;
			salt[0] = (byte) j;
			cat.hashPassword(
					pwd, salt, null, 
					2, 10, 10,
					hash);
			if (phcTestVectors[testVectorIndex++].toUpperCase().equals(bytes2hex(hash))) {
				System.out.println("phc vector " + i + " ok");
			} else {
				System.out.println("phc vector " + i + " failed!");
				break;
			}
		}
		for(i=0; i< 256; i++){
		  
			byte[] hash = new byte[32];
			pwd[0] = (byte) j;
			salt[0] = (byte) i;
			cat.hashPassword( 
					pwd, salt, null, 
					2, 10, 10,
					hash);
			if (phcTestVectors[testVectorIndex++].toUpperCase().equals(bytes2hex(hash))) {
				System.out.println("phc vector " + i + " ok");
			} else {
				System.out.println("phc vector " + i + " failed!");
				break;
			} 
		}
	}
	
	public static void main(String[] args) {
	
		byte[] hash = new byte[64];

		System.out.println("\n\n========== Dragonfly (FAST) =============\n");
		System.out.println("Password, Salt, Data, Garlic, Lambda");
		for (int i = 0; i < 8; i++) {
			Catena cat = new CatenaBRG_v3_1(true);
			System.out.println(cat.getVersionID());

			System.out.print(Password[i] + "   " + Salt[i] + "   ");
			if(AssociatedData[i] != null) {
				System.out.print( new String(AssociatedData[i]));
			}
			System.out.println( "   " + Garlic[i] + "   " + Lambda[i]);
			cat.hashPassword( Password[i].getBytes(), 
					 Salt[i].getBytes(), 
					AssociatedData[i], 
					Lambda[i],
					Garlic[i],
					Garlic[i],
					 hash);
			System.out.println(bytes2hex(hash));
			if ( Output[i].toUpperCase().equals(bytes2hex(hash))) {
				System.out.println("ok");
			} else {
				System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
				System.out.println("Test vector failed: \n expected: " + Output[i].toUpperCase() + "\nResult:   " + bytes2hex(hash));
				break;
			}
		}

		System.out.println("\nPHC TEST: \n");
		PHC_test();
		
		Catena cat = new CatenaBRG_v3_1(true);
		System.out.println(cat.getVersionID());
		hash = new byte[11];
		System.out.println( "null");
		cat.hashPassword("null".getBytes(), 
				 null, 
				null, 
				1,
				1,
				1,
				 hash);
		if ("62830541127d504dafd669".toUpperCase().equals(bytes2hex(hash).toUpperCase())) {
			System.out.println("null vector ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("null vector failed - expected: 62830541127d504dafd669 \n result: " + (bytes2hex(hash)));
		}
		

		System.out.println("\n\n========== Dragonfly-FULL =============\n");
		System.out.println("Password, Salt, Data, Garlic, Lambda");
		hash = new byte[64];
		for (int i = 0; i < 8; i++) {
			cat = new CatenaBRG_v3_1(false);
			
			System.out.println(cat.getVersionID());

			System.out.print(PasswordFull[i] + "   " + SaltFull[i]);
			if(AssociatedDataFull[i] != null) {
				System.out.print( new String(AssociatedDataFull[i]));
			}
			System.out.println( "   " + GarlicFull[i] + "   " + LambdaFull[i]);
			cat.hashPassword( PasswordFull[i].getBytes(), 
					 SaltFull[i].getBytes(), 
					AssociatedDataFull[i], 
					LambdaFull[i], 
					GarlicFull[i],
					GarlicFull[i],
					 hash);
			if ( OutputFull[i].toUpperCase().equals(bytes2hex(hash))) {
				System.out.println("ok");
			} else {
				System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
				System.out.println("Test vector failed: \n expected: " + OutputFull[i].toUpperCase() + "\nResult:   " + bytes2hex(hash));
				break;
			}
		}		


		System.out.println("\n\n========================Client - Server=============================\n");
		hash = new byte[64];
		for (int i = 0; i < 8; i++) {
			Catena catCI = new CatenaBRG_v3_1(true);
			System.out.println(catCI.getVersionID());

			System.out.print(Password[i] + "   " + Salt[i] + "   ");
			if(AssociatedData[i] != null) {
				System.out.print( new String(AssociatedData[i]));
			}
			System.out.println( "   " + Garlic[i] + "   " + Lambda[i]);
			byte[] x = new byte[64];
			catCI.catenaClient( Password[i].getBytes(), 
					 Salt[i].getBytes(), 
					AssociatedData[i],
					Lambda[i], Garlic[i], Garlic[i], 64,
					 x);
			catCI.catenaServer(Garlic[i], x, 64, hash);
			System.out.println(bytes2hex(hash));
			if ( Output[i].toUpperCase().equals(bytes2hex(hash))) {
				System.out.println("ok");
			} else {
				System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
				System.out.println("Test vector failed: \n expected: " + Output[i].toUpperCase() + "\nResult:   " + bytes2hex(hash));
				break;
			}
		}


		System.out.println("\n\n========================CI Update=============================\n");
		System.out.println("Password, Salt, Data, Garlic, Lambda");
		for (int i = 0; i < 8; i++) {
			cat = new CatenaBRG_v3_1(true);
			byte[] updatedHash = new byte[64];

			cat.ciUpdate(hex2bytes(Output[i]),  Lambda[i],
					Salt[i].getBytes(),  
					Garlic[i], Garlic[i] + 3,
				       64,  updatedHash);
			
			cat = new CatenaBRG_v3_1(true);
			System.out.println(cat.getVersionID());

			System.out.print(Password[i] + "   " + Salt[i] + "   ");
			if(AssociatedData[i] != null) {
				System.out.print( new String(AssociatedData[i]));
			}
			System.out.println( "   " + Garlic[i] + "   " + Lambda[i]);
			cat.catena(Password[i].getBytes(), 
					Salt[i].getBytes(),  
					AssociatedData[i], 
					Lambda[i], Garlic[i], Garlic[i] +3, 64,
					Catena.REGULAR, 0,
					hash);

			if (bytes2hex(updatedHash).toUpperCase().equals(bytes2hex(hash).toUpperCase())){
				System.out.println("CI Update ok");
			} else {
				System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
				System.out.println("CI Update failed.\n Expected:\n"+ Output[i] + "\nResult:\n" + bytes2hex(updatedHash));
			}
		}


		System.out.println("\n\n========================Key Derivation Mode=============================\n");
		
		int keylen = 129;
		for (int i = 0; i < 3; i++) {
			
			byte[] key = new byte[keylen];
			cat = new CatenaBRG_v3_1(false);
			cat.deriveKey("password".getBytes(),   
				       "salt".getBytes(),  
				       "data".getBytes(),  
				       2,10,
				       10,
				       0, key);
			if( bytes2hex(key).toUpperCase().equals(catenaKG[i].toUpperCase())){
				System.out.println(" key derivation vector " + keylen + " byte ok");
			} else {
				System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
				System.out.println("key derivation vector " + keylen + " byte failed.\n"
						+ "Expected:\n" + catenaKG[i]
						+ "Result: \n" + bytes2hex(key));
			}
			keylen--;
		}

		
		//==================================Keyed Hashing: 

		System.out.println("\n\n========================Keyed Hashing=============================\n");

		byte[] keyH = hex2bytes("00112233445566778899AABBCCDDEEFF");
		byte[] chash = new byte[64];
		
		cat = new CatenaBRG_v3_1(true);		
		cat.catenaKeyedHashing("password".getBytes(),   
			       "salt".getBytes(),  
			       null,  
				  2, 1,
				  1, 64,
				  keyH, -1L,//0xffffffffffffffffL,// 18446744073709551615L,
				  chash);
		if ( bytes2hex(chash).toUpperCase().equals( OutputKeyed[0].toUpperCase())){
			System.out.println("Keyed Hashing Vector 1 ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("Keyed Hashing Vector 1 failed");
		}
		
		cat = new CatenaBRG_v3_1(true);
		cat.catenaKeyedHashing("password".getBytes(),   
			       "salt".getBytes(),  
			       "data".getBytes(),  
				  2, 10,
				  10, 64,
				  keyH, -1L,//0xffffffffffffffffL,// 18446744073709551615L,
				  chash);
		if ( bytes2hex(chash).toUpperCase().equals( OutputKeyed[1].toUpperCase())){
			System.out.println("Keyed Hashing Vector 2 ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("Keyed Hashing Vector 2 failed");
		}
		
		cat = new CatenaBRG_v3_1(false);

		cat.catenaKeyedHashing("password".getBytes(),   
			       "salt".getBytes(),  
			       null,  
				  2, 1,
				  1, 64,
				  keyH, -1L,//0xffffffffffffffffL,// 18446744073709551615L,
				  chash);
		if ( bytes2hex(chash).toUpperCase().equals( OutputKeyed[2].toUpperCase())){
			System.out.println("Keyed Hashing Vector 3 ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("Keyed Hashing Vector 3 failed");
		}
		
		
		cat = new CatenaBRG_v3_1(false);

		cat.catenaKeyedHashing("password".getBytes(),   
			       "salt".getBytes(),  
			       "data".getBytes(),  
				  2, 10,
				  10, 64,
				  keyH, -1L,//0xffffffffffffffffL,// 18446744073709551615L,
				  chash);
		if ( bytes2hex(chash).toUpperCase().equals( OutputKeyed[3].toUpperCase())){
			System.out.println("Keyed Hashing Vector 4 ok");
		} else {
			System.out.println("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
			System.out.println("Keyed Hashing Vector 4 failed");
		}
	}
}
